(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    250953,       4826]
NotebookOptionsPosition[    246237,       4749]
NotebookOutlinePosition[    246574,       4764]
CellTagsIndexPosition[    246531,       4761]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"<<", "VectorAnalysis`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "FrameFormat", "=", 
   "\"\<{Frame\[Rule]True,ImageSize\[Rule]450,LabelStyle\[Rule]Directive[\
Black,Bold,FontSize\[Rule]13]}\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.876872661343485*^9, 3.876872661590534*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f4f95567-9538-4b42-a682-e4f9dc5592cd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.919040353306885*^9},ExpressionUUID->"4dfbf177-074b-420e-b980-\
017cab7c27f3"],

Cell[CellGroupData[{

Cell["General transformation of inclined spherical coordinates", "Section",
 CellChangeTimes->{{3.8768708444099617`*^9, 
  3.876870880693143*^9}},ExpressionUUID->"47b85247-42be-41de-96d6-\
f139ef69a4a7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnU9oHGeah5vdyx53w4ZNjMHZi4nHYWASDBbGA7o4CbrYI5JhD0Frs7JZ
iO0lM544OTi2ctTBbBT24iZExiRegg9OExuSCQ44ATkMbKBZhBxQjBBMVgFJ
IEJQCNQ+1T/pU6m661P/rX96H0qiurq6uqrrqbfer+qr7/vnU+d/d/pvKpXK
H/6Of787+frwa6+dfGP073nx0rk//PuZc+P/9uK5P46fGX/t8Km/ZeL/8LfG
XzgeGIZhGIZhGF5+aWJ9fT3rlTKMnlhdXT1/9tzJsTENZ8YpLIwzJWn+paWl
ubm5NNfQMLrg49u3jxwewmSG1y9cwO1nnj6wuLjomf/69HSaa2gYnULW8e7U
FEFYL8lAcNsTkOv1OvMz3L1zJ611NIxuwG2NyGrU9cx584MPCdcTl68gtieq
G0Z+8FsdNJIQEnLcZk5eWkJi5J+3JyZmZmY8M5CffHHvHiNO7Pn5eUtIjDwT
s7pljlG9dk0jTuygEcNdfm4YuSJWEsRwdI3Ng8wrKytu3IlNWu6EN4z8gJaV
SuXM+LguYo8eP8FLEunoPCgdjedRsYNGQgLprbFh7ARFRUx2t2YkNmmJu07S
kpjYhlEOTGyjlJjYRikxsY1SYmIbpcTENkqJiW2UEhPbKCUmtlFKTGyjlJRD
7JWff4wO/putxm6gHGLfWph5qvbqbz5986WZKf4f/+zy1z88zHqljCwph9gP
176vfPRK7buv9PKtbz7kJROzXSsjQ8ohNvEZk12UxvDoS2MXUg6x36/XSEXI
rvWSzMQi9i6nHGKTWpNXaxy9kfzMl+9ku0pGtpRDbOIzYhOop2Y/UeHRRW9j
d1ICsXG48t5RlEZssmtT2ghKIXaYUb931Hw2ohRV7OXl4MEDjf7pL9OkHya2
EaWoYl+9GgwPa/SFu2/idrarY+SNQoq9sBBUKsHoaKB7Me8dfar2ql21NqIU
TuywHghK37wZnD6d9boY+aVwYge1Wqg0OfYrr2S9KkZ+KZbYYdcMe/cGf/1r
OJjYRjLFEju4dCm4cSMcMbENL0USe3Y2OHhwY9zENrwUReywzDg8HLgWv01s
w0tRxA4zkIsXt16a2IaXYoiNxpQZl5e3TTGxjWSKIfbp0+FVvigmtuGlAGLf
vx+MjMQnmtiGlwKITRLy6FF8oolteMm72NVqMDnZYrqJbXjJtdizs2G4bomJ
bXjJtdijo8Hnn7d+y8Q2vORXbFV2SsLENrzkVOzl5RuViq8XbBPb8JJTsScn
33jiCV8v2Ca24SWPYj94EIyMzMzMjB4/EeukcgsT2/CSR7GHhlTZ6eTYWFLQ
/vbBg+9+//t0V8soErkT++bNYHN96vX6k4893ty9+9zc3K+P/va/X3o59ZUz
CkO+xH70KHbh+uPbt48cHnJ9ZCP5u1NTh5597tPr14NTp7JYRaMY5Evs06fD
iL0dspEXjz1//uw5BvWpTcS2Zx4NPzkS+/PPk1xdWVm5e+cOQ6i0sMKj4SUX
YhN+a7WwqZDmyk5JmNiGl2zFDh/4qlbDYWQEscOH0NvExDa8ZCb2wkKYTl+5
shGuKTNSGIw+I7OdxcXF6rVrb09MbBQkTWzDS/pih1F6cjJ8htElHiQhBG2m
JIi9tLSkMuPq6ioFSVJuE9vwk0HEJj5HBUbyoaGNnARdW3H+7Lkv7t3T+KFn
n5ufnzexDT8ZFx5nZ8NwrQaBidjkJ03U6/XR4yfcy3179prYxo5kLPbFi+4+
47bkJMK7U1NHDg/xXwPj4b1IE9vwkqXYBOrR0a0rIZQlCeBNRO883r1zh7Qk
zFtMbMNLVmLHW3aCW7e2vdxkI/doMHH5yse3b4djJrbhJbOITeIR+17CdavC
I6VFPXHA/xePPb8x1cQ2vGQjNoVEwnXyVesoitJYzXq6nMTENvxkI/apU82V
nZJYW1sjtcZtl5CEmNiGlwzEbpQZwxy7F0xsw0vaYpN+kIS0X9kpCRPb8NK7
2DPbGT1+grThp59+aj335GRYP6R3TGzDS+9iu1snGp55+sCZ8fGwOkczBOqR
kTbLjDtgYhte+p6KbD0L0IynZadOMbENL+nl2LVaP59SzJnYa2trysQYyXpd
jJDexV5fXyfxqNfrutDBzm2Rh/SrzOjIk9irq6v8hl/cu8ePOXG5HyUIo2d6
FJt9Wr12rVKpsBAKjCfHxhjfuOsdha+oVnta0Rh5EtvVql1cXKTsnFhwNlKk
94i9tLREgZHlYDgJNm7H29ybnW3/PmO7JIvNiYMyLOvDwIhOJZxEVhswQrbA
Web69LRu+hBjt25oNj6Opbz79sSENoQl8FJbFzTOUHyQlyycbWeiq1XL0kzs
nNCXy31EafbytjuDm4T5ycjIRo3rPpIsNh6yRTh8984dNMNkRFW7DQyMsKpB
Y8N5iaKS330cn3mLERbCFvFZArJSaNVU0Uc0p9o5YTl8RNO3arMYmdK72Ox3
xI4GvW2QgQyicOqN2EFD742HyBJAS/kZhU9hafSuKCcjxW0cPvTsc0FD7DPj
4yokMqeODg4BZmOZlmPnhN7Fxmp2buv3SD+GhpIe+OoJb46tXNfFYaKumiXR
QDAnW2CG5lMMqkdbC9TDO3KYmfftCVupIhVBYNxGdQ4ctt0th5kTD3AjXXoU
W3lIvVU96pDmbuz6RbLYeOgEU1ZMPoyublCmTShu/uxWfe9GNOYo4MdRAGch
vPtLA82pRSG2zgsqX3TQgoQxSHoUm9h15PBQ64u3jdaAu18zPwlisyakRirW
qfDY8tNo3/Iso18DRdGYeViIAjtHrkI0qjMP38KG60oIhjORefheX0v1Rrr0
IjaxS3clmt8KAxdWJ0Xy3kkQW+6hnNKPJNNQt+VZhi0iYhOK3buMMIVFqdFX
BOYlA1ut0E241hSzOlcM6s7j5GTrbuz6RZ6uYxs5ZCBiY93Bg32+cN38FSa2
kUzfxQ5P0KOjYT/RA8XENrz0P2LXamkoZ2IbXvordlhmJAnpY2WnJExsw0uf
I/alS2G7CilgYhte+in27CzhutendNvExDa8eMReXFys1+tt1pwfVGWnJExs
w0uS2Nenp9+dmvr49u2TY2OJvYhuW9DNgVR2SsLENry0FJuJ58+e07irxulj
eTnskmAQlZ2SMLENL81iE59dc3lBoy5E9dq1HZYyuMpOSZjYhpdmsRWu19fX
SZtJsM+Mj+8Qscmrh4cHu5bNmNiGl5jYP/30EyYzRY8+kYdUKpWWj8aIsMx4
8GDLdq0Hi4lteImJredEnMn1ev3I4SHf56vVwVZ2SsLENrw0i71vz15XW56c
xJeHLCxQZsymar2JbXiJia3+5lT3WM+x+rxFrX617NQpJrbhpbnwqH5elGDL
8NYkd32eBia24SXpBo3/znjYdEbKF65jmNiGl5jYKysrc3NzJCH8991Mp8DY
35adOsXENrw4sWdmZhh55ukDRw4PnRwb4/+hZ58jLWnxmTQrOyVhYhteEPvM
+Pjo8RMM16enoy3M6FpfC7eHh9Or7JSEiW14QewnH3uc/y0bTSKME8O3Bedb
t1Kt7JSEiW148dfHRunzZ89ttZ6KTpQZB/qUbpuY2IaXHR802NbmM3O23Y3d
YDGxDS87ir3Vfl2jZaeMy4wOE9vwsqPYKE0RMqw9MjSUQWWnJExsw0s7zzz+
+uhv58+e7U83dv3CxDa8tCn2t786mK92RE1sw0s7Yv/H/v0Lf/5zOuvTLia2
4WVnsRuVnfJSZnSY2IaXHcReXh5485LdYWIbXnYQe3IyuHo1xdVpGxPb8OIT
u14PRkbyVWZ0mNiGF5/Yabbs1CkmtuElUexaLWwtJLeY2IaX1mIvLIT3GXNY
ZnSY2IaX1mITq9NpDbhrTGwjCL7+4WHtu6/433w5uoXYuarslISJvbt5uPb9
8c8uvzQzNTX7Cf8ZX/n5x+gMcbFJP4aHc1TZKQkTexeDw0/VXn3rm40WbwjC
lY9ecS9FXOxqNbh4Mc2V7BITexdz5st3fvPpm9GkgikE7eg828R+9CgM13ku
MzpM7N0KSQjx+dbCtm5zEfuFu29Gp2wTG1VSbg24a0zs3cr79RpiRzNqQjcB
PDFiZ9uyU6eY2MkdZ5cbIjMaR6cgeWKOrTJjCt3Y9QsTu8HMzAx7MGyYa9eA
wyQe0Slf//CwUj3M/+hEfpa3JybyW9kpCRN7k6WlpevT0xie9YqkROW9o7Hg
3FyWhOq1a/964kTYSXQhyowOE3s75CRJjcOUDCL2n/4y7V62LEtysB85PFSp
VP7r9ddTX8HeQOxTp7JeiXyB1R/fvh0L3evr63fv3OGk/O7UlGIa/xnfuV+h
vDI1+4krPMrqWAAnMRs9fuKPL7/8xhNP4Pa+PXsLNBz6pyf/t1L5h3S/9B9/
dfA/K5V/Sf172x9Ojo2RlkRbpVtbW0P182fPsYvVYRaq4/kzTx/wtRGdYzgw
Mfn4Z5d17br23VexGdg6tnd1dXUpAkf9UhH49sEDUpE0vzE8y3/+eVCpcNZP
83vbhNWbn58nDqNxcxV6EpVoX0LMwK7Pe62JnYjdQxf8Ai8eez7WUDBbyvRi
5Gnp59jqyzInDWE1MTc3R6x2nRjGIHwhtrs2yF4u5XVCDupoD0oODuQz4+P8
ApmsVWekLzbl61wWV5GWYuMX9+75Z2O3qg1GlCbHTmPN0oWDGquTfgcSbza/
ACeplMUmUO/fn2UPDglgKYF6qY1sGbFVYJy4fMXXpH8xwVsykDIcsGmKzVm7
kVqn9HVtwzm3/cvXTz72+OsXLrDrk9KV4kIcZtMY2gnIzEMRe8cTXGakJjap
9dBQPu9edfSc9ZHDQ/v27M3vDu0BMrHmAqMHznH+bnmzJDWxT58OH2ouProS
mPVa9J+7d+5sNJraCe0kb9mQjti3boVJSP5S605hv5fSavx85ukDvZyGclfN
JgWxHz0Krc6qh9Z+wF4jpZybmwurA5WO1dXV0eMntrrb6Bx+HJZAcp6jxnMG
LHZYDNm/P7h0aXBfkQKcoxnczfSSgZCUiFt3bNc2FKWjV/izZ9ARe3IyTK2L
VTGsieaqI6Wheu0awZYkhBJx124TqDnqu0jRB8hAxdat8wLVTt9l4POhZ5/T
dUuOXMzsogRBlH7x2POqVaIp5Gz+a6HMwIHgucPbBwYn9sJCeOu8KI/I7T6I
rpgcLTDiG1MmLl9pszYIs6kaWOxeJJIzsaW0qhJJ8sN3cSBwvhhUWj44sclA
rEJsXqE4TKxujs9Mx1VSbt5KyitQkfDObGQvWNp8FMjeWL7NRA6ik2NjrgDO
8smCBlVsGZDYV69SZszdJSCjAWYSM4nMSVIRTom6WHdmfBxFyb0xGS3VpSNy
8hZ+dpRIMDOLIkqzKCI843wF8rMyA8nMByH2gwf5vHVuCKQiK94xVKIiSjOz
+lLHZ6zGbcxsP2SxhObL4yyZY4cVQGlVa+9/2bzvYi8vh1bn8ta5ETRMw+rU
KrrwdZVKJenWD+8qHeq/230X+/RphlJe7y0B+Eyxrk2FtBPX1taIrr18KV/n
STY4BcjtXu4QtaC/YuvWecGvWpcVSnnEakTacU4yYV24INIygnjkIYOro4vS
qnPCcbfVLXuP9FFs1UrNbd8Nux5S5Xa0QWDmVJTmQJByh559rve7igjsue1O
WsLho+vbfbjs0Cexw9PWwYP56nTYiKA7jO0Io0sfweblOHnYF7FZoK4Qxqaz
Vrr8opMCK9Bj8hPSr4iN0sPDllrnE4IhZrZ528U9PoBgkpDMxN2g7BHWoWXE
7n9hti9i12qZ1ErlB9f1opS/t1jwE3meYWyG4OmuVKj2iFpT6e9a/dLAP0NP
54jexWYJWN3vp851E8Fz6mSrdVmVn93uBCWx1GjKqaMLDspA+IgeqRiE1UEj
365UKp6UQzuXFeiy0Nqb2OFBNzw8iNSazSEtTDqo2V+Ua+QzeyFHtSXzhIJD
F3XI+fGJ8PzCSD6gZ2TYs6jbfMhovwcNsflq3NZJmfXp7DmIHiP21avB3r1K
BlhVMijJxuolZXS8pd9KDdS46Xx8sQEzaFFa7GoDvesOXnaWu2xFYGlujoyZ
XZbCZ/kiprikheVol7kpqpmm3KY08Z9fyZX+OoWflB+232sUpzlwqQYsO+v8
2XNKvHV/n53VWejuReztt861SqxD0DjcVI9RZxMNjLNupG2qD6ZbtG5hus7D
0cp0FuWuuGqZjPOf9E+Gs7/cQcGpNhqxmU6Y0rUj/jO/jgIWrnXTj8ZbLERH
BO+qIUqms2JMdzUwi4ueYew63mqX9XeVklDzcdEpqgBPhNHe11Z01gJV12Lr
1vn2zv5YQ4TUI1QYhZ+soRukGe/q2pHiqj7Imksn1R8IGlUfnXUoygxMZ4SN
Vc1hNplv4dBgPFqmdgGc+fkpmE3nO7WYwVeoBo5mUFOTesl/new4fIr+EDo/
MtGjlwyt4wjZA6wt+XbsOGLfoYR79sHttXbpWuwLF/hg86lEtW09B5dib/N0
FMUopQH8qviphagQETROjvogUd3ljew72a6XCubRPcJBpBIKExXB9OCqylN6
3I//OkcoUBddbH43trrPd6gHDDs31m6tuyrCPmWPqDJJBy0Hdid2tdry1jnO
qIlOveQYVK0wVXTUT827SdqoIlnQ0JX5g4aNLutwl1WjCTbj0T3IeDS9iSYt
qibhpqMx0UCV7YPN0qjeLW4DqsFm83qleeiYoMTm6CRO2HG3RINW+fk2uhB7
dja0+v792GQ9T6FGlfXtTEEhBUlX9HPvRlHyoM/yKZSTn1EbXXLCYSux5W10
A53Y7F++RRmOvlc5iVKaYPMwYQmIzRJYsj6o00Fx7zSxUQOsvT942EHRlMNt
iApliuHsWXaTKoonlvQ7FDtczsGDLWul6gH8YPPubcsMTaGyOR7qaQ7XjrrK
iXpSQ4GU8Scfe9z5zDaq4kHsGFE9H8zkLR0Fao6MheOt8nNlbnyFPqvUSE17
Rdt1LyJqyqm4p5tg89Spve8msq91DtIDPir1qziWmHF1GrFRd3i45Tt8qVsZ
NcTRPI9KlC0/q9iul+sNYvO7iW5+z6Kib0WXzAI5ozEleqQzUXl1oW9icpzu
27O3BE/TE53YF1F/2FmKk6pqSNyWz0Sh/ohd0qfOVQmn0I1MKqcqdJm3JVG9
1XS5xnXR2HdBsn2xFxaK3qBTEpzR+lYNOAvU8GlpCowOXfGLXrQk11JPQITu
HS5mtin28nLYYHtJa6UiRqFbumZHx5LScqCba7EOFNq9y9+m2JcuBfv3F7dU
VWJIMklCCn1g+umyLNyO2Pfvh0nI7Gw3yzcGCafjWI2CEtPZKWlHsXXrPK99
Ie1mCGW9NLhXLDglqZOUdtOGHcUeGQkfPDdyhp5MLENnMW2jexDtZiZ+savV
sH8Ne+o8f6hFpqzXIm06KOV5xLanzvPKzQ8+7CB2lRGi9w7l5SSx1RfS9lqp
Rh6gqEhq3YfnuAsLcfvFY8+7R6hakyQ2eXXCrXMjQ8p6h7FT9GSZ73mQlmLf
vBk2bW2pdc5QVy+7qsDYPc1iqy+kplqpRuboDqPdJovRukf77WKH18BJrQve
F1IpuT49vUNWuVvhFNaiJYdYxEbpkZHy1TooOkSkHp9hLDcUOuL5dlRsu3We
S+bn59tv+3eXs5WnObHLWyu10JB7qA3SrFekGLiHsLbEHh62W+c55PULF1o+
1G+0hGxtowOF5eWwb69qNXyS0a7v5Qw95l/iKqmDYOPnQmaUttQ6f5BU36hU
/u/YsfA5U/9w8WLfhkuXuh+uXOlpmJzsbLh61TewQOsLKX+o3YlPr18PAw5D
vd7u8OBBB8P9+76BAld3Q63W5XDrVuJw86ZvuHGjxVCr2TX/XKH2qWItIxk9
8nDtew0rP/+Y9brsUqzA2HeQ+a1vPqxUDx//7LKJnQlqb7YEzb3mja9/eFh5
7ygRO+sVKT9LS0uxW+QUGPft2TuQLph3PWHE/mgAvasbTdz84MPowwJqYNnu
MA6IF+6+SR6S9VqUgfX1dTXL6S5Eo3G0rk60Q0O1Y1yIAqO6nPDMUK/X2bQd
j9Bom3iDhryacP1+vZbO15UblFbFMzUz9cW9e5UGLn92N8rxhNIis+X/8hTH
JpvgeSrNNWPrGkdtiZ6CSe2Jidp3XyE2aXY6X7cbIHbpJi+7mwAVvY3oGiUr
Vtu/nqqznI/UsHnQKAX7T0D8GqltMrH6qdqrVnLsIwpxLZsgU8RWzyODKzCy
ZIXQoHHWSGonWW/pLBOtc6UGq1W5iHONa+CU/xyzzK+297VM9f7jti4qNp9V
2+N8SstRk5Jqi0/dzUS/l2OEgK/pzNDj7/PSzBQ5tnuJ4bcWrCzTE+zxZ54+
0NzoJek3PiDGk489Hk1H2ZV9f1DXdSOlDgJwlf9kAkzXgDZquhz3MDwqJBkF
73KikXWu5xT1OiG31W+vmrZmirqu491opuE6I8BSjvFYx9Z8Sh2tSmDZHjRa
SueLoieCLmAXkIe89c2HWyvz5TtTs590vUAjaEQ81G3eL+ws9RslT/CZfap+
0/oevV0glbfBZovTjqAhqms0PhrS1cZ+sNnCGH7qGFEXA0pL9EE1aMPKzzVg
q6MtM6OoQrSW41aJ78VnNX7OcjjeXcdA6n1GnXD10txEmGBXD2MyOTZDeN3P
Lmj3htoLZYe6q9MuQVVXQeozSP3xodyAKvIpK1BfKkGjVMt3zWyiQBrrvsfB
u2RKOvpYPWSWrq73H8zUfVJEVZcW+pS6NXTLUbcprljh+npzGQirp/6A1LdF
EInbitjdJeQrP/9Igt08FKVEkzfU2q2a31d3b+wmTHDRWFcPGJhh0BVTZYg7
F+ilGxTDW3Z65bqjJaiyOayqer9SF0666OE6vXIeBpF+2IU2kCCs3n75OA7r
6pDrvpBv13Hh0m9W2PVcUL7WvwuKruy5jiRIszcqwG/iunlKATXK6u+QlDWM
rQ8xDaOiyYb67gk2+xJySYU20/VXyIj8d6hbq6ChsZIWF8+lehDpDE4dDzEb
S+Mtpeud9V5qDAzCUTQnRI8Md40SA88Mcjh24mAipimqKzjryon6gFMBk+1S
n8vyX70gMSV2olcw57MKzvxnXD3MMrO+V5FftjMD83OaYIrr+tAwYvR+uSx9
1Ilt1mth5BHCrDpKLmL9E5e6G0YMEgb0KGhvaByVhTvLGIZRLP4fSPwU7A==

    "], {{0, 207}, {243, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{195.86328125, Automatic},
  ImageSizeRaw->{243, 207},
  PlotRange->{{0, 243}, {0, 207}}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"34694515-db44-4dfb-923c-ac46d3133693"],

Cell[TextData[{
 "Define Xe,Ye,Ze as coord defind respect to the earth equator plane. Xs, Ys, \
Zs as sun elllipic. Xp,Yp,Zp as sattelite;\n\n ",
 Cell[BoxData[
  SubscriptBox["\[Theta]", "es"]],
  CellChangeTimes->{{3.876968414915827*^9, 3.876968563716538*^9}},
  ExpressionUUID->"d751c48e-51cf-4d35-a0f9-d1f8631518e7"],
 " is earth inclination angle=23.5 degree,  ",
 Cell[BoxData[
  SubscriptBox["\[Theta]", "isat"]],
  CellChangeTimes->{{3.876968414915827*^9, 3.876968563716538*^9}},
  ExpressionUUID->"2cc01a6d-94bb-42b8-a7aa-ea19e548e891"],
 " is sattlite inclination angle. ",
 StyleBox[" \[Psi] is \[OpenCurlyDoubleQuote]Right ascension of the ascending \
node (RAAN)\[CloseCurlyDoubleQuote] . ",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["\[Theta]", "re"]],
  CellChangeTimes->{{3.877048080250489*^9, 3.877048108238575*^9}, {
   3.877048211270185*^9, 3.87704821381705*^9}, {3.877048387896803*^9, 
   3.877048414180098*^9}},ExpressionUUID->
  "29ff78c3-b94f-47db-8147-38d89eb3e5c3"],
 StyleBox[" is the sun\[CloseCurlyQuote]s revolution angle respect to earth \
center",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.876870915200433*^9, 3.876871008397751*^9}, {
  3.87696939238091*^9, 3.8769693935052433`*^9}, {3.876977022427133*^9, 
  3.876977109342247*^9}, {3.8769771500920973`*^9, 3.876977196604536*^9}, {
  3.876977290865898*^9, 3.876977327239767*^9}, {3.876977374092679*^9, 
  3.876977380865389*^9}, {3.87704713827065*^9, 3.877047138773468*^9}, {
  3.877047187373665*^9, 3.877047190228816*^9}, {3.877047357142784*^9, 
  3.877047358880018*^9}, {3.877047414670704*^9, 3.8770474425114403`*^9}, {
  3.877047476010705*^9, 3.877047478684701*^9}, {3.877048001542157*^9, 
  3.877048072731578*^9}, {3.877048192624775*^9, 3.877048199790401*^9}, {
  3.877048422127141*^9, 3.877048446435275*^9}, {3.877054095423628*^9, 
  3.8770541855933228`*^9}, {3.877056851796232*^9, 
  3.877056852657281*^9}},ExpressionUUID->"76c34f99-1a42-4958-8553-\
a96fc75b6888"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xs", ",", "Ys", ",", "Zs"}], "}"}], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Xe", ",", "Ye", ",", "Ze"}], "}"}], ".", 
     RowBox[{
      RowBox[{"TransformationMatrix", "[", 
       StyleBox[
        RowBox[{"RotationTransform", "[", 
         RowBox[{
          RowBox[{"(", 
           SubscriptBox["\[Theta]", "es"], ")"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}],
        FontSize->14], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ")"}], ".", 
   RowBox[{
    RowBox[{"TransformationMatrix", "[", 
     StyleBox[
      RowBox[{"RotationTransform", "[", 
       RowBox[{
        RowBox[{"(", 
         SubscriptBox["\[Theta]", "re"], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}],
      FontSize->14], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "3"}], ",", 
      RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "express", " ", "sun", " ", "coord", " ", "as", " ", "earth", " ", 
    "coord"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.877048080250489*^9, 3.877048108238575*^9}, {
  3.877048211270185*^9, 3.87704821381705*^9}, {3.877048387896803*^9, 
  3.877048414180098*^9}, {3.877056763724882*^9, 3.877056770562389*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"aea07b6f-678a-4d96-8541-85e70d5d7718"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Xe", " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "re"], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Ye", " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "es"], "]"}]}], "+", 
       RowBox[{"Ze", " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "es"], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "re"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "re"], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Ye", " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "es"], "]"}]}], "+", 
       RowBox[{"Ze", " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "es"], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"Xe", " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "re"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Ze", " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "es"], "]"}]}], "-", 
    RowBox[{"Ye", " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "es"], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.877048415548416*^9, 3.877048476717649*^9, 
  3.877087717639509*^9, 3.877480903990032*^9, 3.8774842027772703`*^9, 
  3.877569883693122*^9, 3.877638978384013*^9, 3.877687997402563*^9, 
  3.877688140246066*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"020e58dd-8266-48d4-8bb7-98c1b9e2139f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"XP", ",", "YP", ",", "ZP"}], "}"}], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Xe", ",", "Ye", ",", "Ze"}], "}"}], ".", 
     RowBox[{
      RowBox[{"TransformationMatrix", "[", 
       StyleBox[
        RowBox[{"RotationTransform", "[", 
         RowBox[{
          RowBox[{"(", "\[Psi]", ")"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}],
        FontSize->14], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "3"}], ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ")"}], ".", 
   RowBox[{
    RowBox[{"TransformationMatrix", "[", 
     StyleBox[
      RowBox[{"RotationTransform", "[", 
       RowBox[{
        RowBox[{"(", 
         SubscriptBox["\[Theta]", "isat"], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}],
      FontSize->14], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", "3"}], ",", 
      RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "express", " ", "sattlite", " ", "coord", " ", "as", " ", "earth", " ", 
    "coord"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8770481697508173`*^9, 3.8770481718930683`*^9}, {
  3.877048215171851*^9, 3.877048241991371*^9}, {3.877048697120262*^9, 
  3.877048700457376*^9}, {3.877056781687653*^9, 3.877056786074201*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"eff0c6bb-38a3-4f36-abef-e38659f9239f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Xe", " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
    RowBox[{"Ye", " ", 
     RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Ye", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "-", 
       RowBox[{"Xe", " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"Ze", " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"Ze", " ", 
     RowBox[{"Cos", "[", 
      SubscriptBox["\[Theta]", "isat"], "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Ye", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "-", 
       RowBox[{"Xe", " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      SubscriptBox["\[Theta]", "isat"], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877048454362599*^9, 3.877048479564068*^9}, 
   3.877048701488538*^9, 3.877087717667075*^9, 3.877480904446632*^9, 
   3.8774842028128242`*^9, 3.877569885000407*^9, 3.87763898612818*^9, 
   3.877687997451741*^9, 3.877688140916252*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"e8c1efe5-d088-4460-890a-c2d2e01a46a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pXYZasSpher", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xp", ",", "yp", ",", "zp"}], "}"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "->", 
     RowBox[{
      RowBox[{"CoordinatesToCartesian", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"rp", ",", "\[Theta]p", ",", "\[Phi]p"}], "}"}], ",", 
        "Spherical"}], "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.8770490469390793`*^9, 3.877049048677009*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"3a587313-2f56-4542-a06d-a02cfe66eba7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"xp", "\[Rule]", 
    RowBox[{"rp", " ", 
     RowBox[{"Cos", "[", "\[Phi]p", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]p", "]"}]}]}], ",", 
   RowBox[{"yp", "\[Rule]", 
    RowBox[{"rp", " ", 
     RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]p", "]"}]}]}], ",", 
   RowBox[{"zp", "\[Rule]", 
    RowBox[{"rp", " ", 
     RowBox[{"Cos", "[", "\[Theta]p", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.877048600616942*^9, 3.8770490557295313`*^9, 
  3.8770877177314034`*^9, 3.877480904485161*^9, 3.877484202876005*^9, 
  3.877569887458426*^9, 3.8776389862861156`*^9, 3.877687997568408*^9, 
  3.8776881411630983`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c5f36869-4bad-4839-9bbb-d568c0b0c015"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eXYZtoPSub", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xp", "\[Equal]", "XP"}], ",", 
          RowBox[{"yp", "==", "YP"}], ",", 
          RowBox[{"zp", "\[Equal]", "ZP"}]}], "}"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Xe", "\[Rule]", "xe"}], ",", 
          RowBox[{"Ye", "\[Rule]", "ye"}], ",", 
          RowBox[{"Ze", "\[Rule]", "ze"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"xe", ",", "ye", ",", "ze"}], "}"}]}], "]"}], "//", 
     "FullSimplify"}], ")"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "express", " ", "earth", " ", "coord", " ", "as", " ", "sattilite", " ", 
    "coord"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.877048717585742*^9, 3.877048760087214*^9}, {
  3.877048919734516*^9, 3.8770489516447697`*^9}, {3.877049027646112*^9, 
  3.877049028070459*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7a63fe37-3aba-432f-8531-16b63c4dbce4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"xe", "\[Rule]", 
    RowBox[{
     RowBox[{"xp", " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "yp"}], " ", 
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
        RowBox[{"zp", " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{"ye", "\[Rule]", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"xp", "+", 
       RowBox[{"yp", " ", 
        RowBox[{"Cos", "[", 
         SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
        RowBox[{"Cot", "[", "\[Psi]", "]"}]}], "-", 
       RowBox[{"zp", " ", 
        RowBox[{"Cot", "[", "\[Psi]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{"ze", "\[Rule]", 
    RowBox[{
     RowBox[{"zp", " ", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
     RowBox[{"yp", " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "isat"], "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8770487077173977`*^9, 3.877048760667778*^9}, {
   3.877049036117722*^9, 3.877049059505005*^9}, 3.877087718898538*^9, 
   3.877480905144216*^9, 3.8774842034816723`*^9, 3.877569889265647*^9, 
   3.8776389869677677`*^9, 3.87768799834986*^9, 3.877688142042492*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"cf7fd83c-464f-4061-9d29-fba72bddad59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sXYZtoPSub", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xs", "->", "Xs"}], ",", 
       RowBox[{"ys", "->", "Ys"}], ",", 
       RowBox[{"zs", "->", "Zs"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Xe", "\[Rule]", "xe"}], ",", 
       RowBox[{"Ye", "\[Rule]", "ye"}], ",", 
       RowBox[{"Ze", "\[Rule]", "ze"}]}], "}"}]}], "/.", "eXYZtoPSub"}], "//",
    "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"express", " ", "elliptic", " ", 
    RowBox[{"(", "sun", ")"}], " ", "coord", " ", "coord", " ", "as", " ", 
    "sattilite", " ", "coord"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.877049000346368*^9, 3.877049032647068*^9}, {
  3.877049062698958*^9, 3.8770491064767513`*^9}, {3.877049162600683*^9, 
  3.877049170173463*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"c529ed47-5b27-43be-9022-88666ee25488"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"xs", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "re"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"xp", " ", 
         RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "yp"}], " ", 
            RowBox[{"Cos", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
           RowBox[{"zp", " ", 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "es"], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"zp", " ", 
            RowBox[{"Cos", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
           RowBox[{"yp", " ", 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "es"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"xp", "+", 
           RowBox[{"yp", " ", 
            RowBox[{"Cos", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
            RowBox[{"Cot", "[", "\[Psi]", "]"}]}], "-", 
           RowBox[{"zp", " ", 
            RowBox[{"Cot", "[", "\[Psi]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], ")"}], 
      " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "re"], "]"}]}]}]}], ",", 
   RowBox[{"ys", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "re"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "es"], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"zp", " ", 
            RowBox[{"Cos", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
           RowBox[{"yp", " ", 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "es"], "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"xp", "+", 
           RowBox[{"yp", " ", 
            RowBox[{"Cos", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
            RowBox[{"Cot", "[", "\[Psi]", "]"}]}], "-", 
           RowBox[{"zp", " ", 
            RowBox[{"Cot", "[", "\[Psi]", "]"}], " ", 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], ")"}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"xp", " ", 
         RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "yp"}], " ", 
            RowBox[{"Cos", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
           RowBox[{"zp", " ", 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], ")"}], 
      " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "re"], "]"}]}]}]}], ",", 
   RowBox[{"zs", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "es"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"zp", " ", 
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
        RowBox[{"yp", " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "es"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"xp", "+", 
        RowBox[{"yp", " ", 
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
         RowBox[{"Cot", "[", "\[Psi]", "]"}]}], "-", 
        RowBox[{"zp", " ", 
         RowBox[{"Cot", "[", "\[Psi]", "]"}], " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8770490704304457`*^9, {3.877049101076351*^9, 3.877049109755465*^9}, 
   3.877049170717701*^9, 3.877087722101591*^9, 3.877480909094454*^9, 
   3.877484208104093*^9, 3.8775698979812193`*^9, 3.8776389917202263`*^9, 
   3.877688003603106*^9, 3.8776881486761303`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"22eff525-f839-4a0e-91c4-d8773dc1deae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"er\[Theta]\[Phi]Sub", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"CoordinatesFromCartesian", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xe", ",", "ye", ",", "ze"}], "}"}], ",", 
         StyleBox["Spherical", "TI"]}], "]"}], "/.", "eXYZtoPSub"}], "/.", 
      "pXYZasSpher"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"rp", ">", "0"}]}]}], "]"}]}], "   "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "express", " ", "earth", " ", "spherical", " ", "coord", " ", "as", " ", 
    "sattilite", " ", "spherical", " ", "coord"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.877048804433996*^9, 3.8770488151463003`*^9}, {
  3.877048848198935*^9, 3.877048850189348*^9}, {3.877049039775724*^9, 
  3.8770490526668463`*^9}, {3.877049122894307*^9, 3.877049130632399*^9}, {
  3.877055788088488*^9, 3.87705579773794*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"70bdf333-c0ba-4013-a358-4c532ef1425d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"rp", ",", 
   RowBox[{"ArcCos", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
      RowBox[{"Cos", "[", 
       SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]p", "]"}], " ", 
      RowBox[{"Sin", "[", 
       SubscriptBox["\[Theta]", "isat"], "]"}]}]}], "]"}], ",", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]p", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]p", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]p", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]p", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]p", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        SubscriptBox["\[Theta]", "isat"], "]"}]}]}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8770488449333897`*^9, 3.8770488506913147`*^9}, 
   3.8770491333027353`*^9, 3.877087724535043*^9, 3.877480912373434*^9, 
   3.877484212543929*^9, 3.877569904969051*^9, 3.877638996055287*^9, 
   3.877688009709293*^9, 3.877688152969718*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"7f5ccdce-a4a2-4329-8573-6877ae348012"]
}, Open  ]],

Cell["\<\
To save computation time, I paste the simpflied result below:\
\>", "Text",
 CellChangeTimes->{{3.8770558487801743`*^9, 
  3.877055866424491*^9}},ExpressionUUID->"f77f7d26-2fff-4a35-a97c-\
9f7987f75feb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sr\[Theta]\[Phi]Sub", "=", 
   RowBox[{"{", 
    RowBox[{"rp", ",", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]p", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Phi]p", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ")"}]}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "es"], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "es"], "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]p", "]"}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "es"], "]"}], " ", 
           RowBox[{"Cos", "[", 
            SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "es"], "]"}], " ", 
           RowBox[{"Sin", "[", 
            SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], "]"}], 
     ",", 
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rp", " ", 
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "re"], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]p", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]p", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "isat"], "]"}]}], " ", 
               RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]p", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Sin", "[", 
                SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rp", " ", 
            RowBox[{"Cos", "[", 
             SubscriptBox["\[Theta]", "es"], "]"}], " ", 
            RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]p", "]"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
                  RowBox[{"Cot", "[", "\[Psi]", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]p", "]"}]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Cot", "[", "\[Psi]", "]"}], " ", 
               RowBox[{"Sin", "[", 
                SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"rp", " ", 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "es"], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]p", "]"}], " ", 
               RowBox[{"Sin", "[", 
                SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], ")"}],
          " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "re"], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          SubscriptBox["\[Theta]", "re"], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rp", " ", 
            RowBox[{"Cos", "[", 
             SubscriptBox["\[Theta]", "es"], "]"}], " ", 
            RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Phi]p", "]"}], "+", 
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   SubscriptBox["\[Theta]", "isat"], "]"}], " ", 
                  RowBox[{"Cot", "[", "\[Psi]", "]"}], " ", 
                  RowBox[{"Sin", "[", "\[Phi]p", "]"}]}]}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Cot", "[", "\[Psi]", "]"}], " ", 
               RowBox[{"Sin", "[", 
                SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"rp", " ", 
            RowBox[{"Sin", "[", 
             SubscriptBox["\[Theta]", "es"], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Cos", "[", 
                SubscriptBox["\[Theta]", "isat"], "]"}]}], "+", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]p", "]"}], " ", 
               RowBox[{"Sin", "[", 
                SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{"rp", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]p", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]p", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Psi]", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 SubscriptBox["\[Theta]", "isat"], "]"}]}], " ", 
               RowBox[{"Sin", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Phi]p", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]p", "]"}], " ", 
               RowBox[{"Sin", "[", 
                SubscriptBox["\[Theta]", "isat"], "]"}]}]}], ")"}]}]}], ")"}],
          " ", 
         RowBox[{"Sin", "[", 
          SubscriptBox["\[Theta]", "re"], "]"}]}]}]}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.877055844962668*^9, 3.8770877353576393`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"eb4b4dbd-9c5c-4c26-94cd-fb02240f9478"]
}, Closed]],

Cell[CellGroupData[{

Cell["Sattelite orbit analysis", "Section",
 CellChangeTimes->{{3.8768718288639717`*^9, 
  3.876871837372882*^9}},ExpressionUUID->"ddcb13ca-91b8-4197-bf0b-\
4df56d8ed9ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]Eorbit", "[", 
   RowBox[{
   "\[Theta]isatv_", ",", "\[Phi]pv_", ",", "\[Psi]v_", ",", "\[Theta]rev_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"er\[Theta]\[Phi]Sub", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]p", "\[Rule]", 
      RowBox[{"Pi", "/", "2"}]}], ",", 
     RowBox[{"\[Phi]p", "->", "\[Phi]pv"}], ",", 
     RowBox[{"\[Psi]", "\[Rule]", "\[Psi]v"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "isat"], "\[Rule]", "\[Theta]isatv"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "re"], "->", "\[Theta]rev"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]Eorbit", "[", 
   RowBox[{
   "\[Theta]isatv_", ",", "\[Phi]pv_", ",", "\[Psi]v_", ",", "\[Theta]rev_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"er\[Theta]\[Phi]Sub", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]p", "\[Rule]", 
      RowBox[{"Pi", "/", "2"}]}], ",", 
     RowBox[{"\[Phi]p", "->", "\[Phi]pv"}], ",", 
     RowBox[{"\[Psi]", "\[Rule]", "\[Psi]v"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "isat"], "\[Rule]", "\[Theta]isatv"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "re"], "->", "\[Theta]rev"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "spherical", " ", "coordinate", " ", "of", " ", "moving", " ", 
     "sattllite", " ", "respect", " ", "to", " ", "earth", " ", "equatorial", 
     " ", "plane"}], ",", " ", 
    RowBox[{
     RowBox[{"Pi", "/", "2"}], " ", "minus", " ", "\[Theta]Eorbit", " ", 
     "will", " ", "represent", " ", "the", " ", "lattidude"}], ",", " ", 
    RowBox[{
    "while", " ", "\[Phi]Eorbit", " ", "is", " ", "the", " ", "longitude"}]}],
    " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8765370410115843`*^9, 3.876537126140852*^9}, {
   3.876537169272552*^9, 3.87653721378334*^9}, {3.87678745204565*^9, 
   3.876787488751742*^9}, 3.876788913492914*^9, {3.8767889467598267`*^9, 
   3.876788992765316*^9}, {3.8768006892531757`*^9, 3.876800697073873*^9}, {
   3.876800746623486*^9, 3.876800759329153*^9}, {3.876800803847847*^9, 
   3.876800804108675*^9}, {3.876800909392169*^9, 3.8768009114475203`*^9}, 
   3.876871394152246*^9, {3.8768715654264936`*^9, 3.87687161277339*^9}, {
   3.876967990323265*^9, 3.876968007727934*^9}, {3.8769681059991827`*^9, 
   3.876968110358612*^9}, {3.8769696846233873`*^9, 3.876969690036743*^9}, {
   3.877049280412724*^9, 3.877049281838615*^9}, {3.877049333193893*^9, 
   3.877049408759965*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9d2ea980-1a23-4245-86bf-cc87629d8b91"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DegToRad", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"x", "/", "180"}], "*", "Pi"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rad2degree", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "/", "Pi"}], "*", "180"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8767981252629004`*^9, 3.876798144723304*^9}, {
  3.87687226833521*^9, 3.87687226856551*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"48d30d19-c559-4e90-b13c-cf3981c90ade"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]orbit", "[", 
   RowBox[{
   "\[Theta]isatv_", ",", "\[Phi]pv_", ",", "\[Psi]v_", ",", "\[Theta]rev_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"sr\[Theta]\[Phi]Sub", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]p", "\[Rule]", 
      RowBox[{"Pi", "/", "2"}]}], ",", 
     RowBox[{"\[Phi]p", "->", "\[Phi]pv"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "es"], "->", 
      RowBox[{"DegToRad", "[", "23.5", "]"}]}], ",", 
     RowBox[{"\[Psi]", "\[Rule]", "\[Psi]v"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "isat"], "\[Rule]", "\[Theta]isatv"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "re"], "->", "\[Theta]rev"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]orbit", "[", 
   RowBox[{
   "\[Theta]isatv_", ",", "\[Phi]pv_", ",", "\[Psi]v_", ",", "\[Theta]rev_"}],
    "]"}], ":=", 
  RowBox[{
   RowBox[{"sr\[Theta]\[Phi]Sub", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]p", "\[Rule]", 
      RowBox[{"Pi", "/", "2"}]}], ",", 
     RowBox[{"\[Phi]p", "->", "\[Phi]pv"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "es"], "->", 
      RowBox[{"DegToRad", "[", "23.5", "]"}]}], ",", 
     RowBox[{"\[Psi]", "\[Rule]", "\[Psi]v"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "isat"], "\[Rule]", "\[Theta]isatv"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "re"], "->", "\[Theta]rev"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "spherical", " ", "coordinate", " ", "of", " ", "moving", " ", 
     "sattllite", " ", "respect", " ", "to", " ", "ecliptic", " ", "plane"}], 
    ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", "ecliptic"}], " ", "plane", " ", "as",
        " ", "the", " ", "x"}], "-", 
      RowBox[{"y", " ", 
       RowBox[{"plane", ".", " ", "\[IndentingNewLine]", "Here"}], " ", 
       SubscriptBox[
        StyleBox["\[Theta]",
         FontSize->14], "inc"], " ", "is", " ", "the", " ", "inclination", 
       " ", "angle", " ", "of", " ", "the", " ", "satellite", " ", "orbit", 
       " ", "respect", " ", "to", " ", "ecliptic", " ", 
       RowBox[{"plane", ":", " ", 
        SubscriptBox["\[Theta]", "inc"]}]}]}], "=", 
     RowBox[{
      RowBox[{"\[Theta]i", "[", "sat", "]"}], "-", 
      RowBox[{"\[Theta]i", "[", "es", "]"}]}]}], ",", " ", 
    RowBox[{"where", "\[IndentingNewLine]", 
     RowBox[{"\[Theta]i", "[", "sat", "]"}], " ", "is", " ", "the", " ", 
     "incliation", " ", "angle", " ", "of", " ", "satellite", " ", "respect", 
     " ", "to", " ", "earth", " ", "equatorial", " ", "plane"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Theta]i", "[", "es", "]"}], " ", "is", " ", "inclination", 
     " ", "angle", " ", "of", " ", "earth", " ", "rotationa", " ", "axis", 
     " ", "respect", " ", "to", " ", "the", " ", "normal", " ", "vector", " ",
      "of", " ", "ecliptic", " ", "plane"}]}], "\[IndentingNewLine]", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8765370410115843`*^9, 3.876537126140852*^9}, {
   3.876537169272552*^9, 3.87653721378334*^9}, {3.87678745204565*^9, 
   3.876787488751742*^9}, 3.876788913492914*^9, {3.8767889467598267`*^9, 
   3.876788992765316*^9}, {3.8767987076832457`*^9, 3.876798714943568*^9}, {
   3.8768007089714613`*^9, 3.876800727447164*^9}, {3.87680078456094*^9, 
   3.876800797885756*^9}, {3.8768714671024733`*^9, 3.876871485401958*^9}, {
   3.876872856906336*^9, 3.8768729418201227`*^9}, {3.876968062967537*^9, 
   3.876968064898858*^9}, {3.8769681191951723`*^9, 3.8769681257638903`*^9}, {
   3.8769694482715473`*^9, 3.8769694645267553`*^9}, {3.876969614297515*^9, 
   3.8769696375014353`*^9}, {3.8769696746113787`*^9, 3.876969676266777*^9}, {
   3.877049288026181*^9, 3.8770493031753607`*^9}, {3.8770494198706703`*^9, 
   3.877049433153719*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"43ca03e3-2c80-4558-ac7c-dc04a66aa8ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=", "1"}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", "=", 
    RowBox[{"2", 
     RowBox[{"Pi", "/", "T"}]}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "augular", " ", "velocity", " ", "of", " ", "the", " ", "sattelite"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.876783340320203*^9, 3.876783340543408*^9}, {
   3.8767834496130247`*^9, 3.876783457700471*^9}, {3.876783589991643*^9, 
   3.8767836550536413`*^9}, {3.876790236865262*^9, 3.87679025100697*^9}, {
   3.876871511655505*^9, 3.876871525154396*^9}, 3.8768716310249557`*^9, 
   3.877055904510273*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"d4374da8-c166-4a35-99aa-ceef31d9803e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"wre", "=", 
   RowBox[{"2", 
    RowBox[{"Pi", "/", 
     RowBox[{"(", 
      RowBox[{"T", "*", "Ntot"}], ")"}]}]}]}], ";", " ", 
  RowBox[{"Ntot", "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"365", "*", "24", "*", "60"}], ")"}], "/", "Ts"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "wre", " ", "is", " ", "the", " ", "angular", " ", "velocity", " ", "of", 
     " ", "sun", " ", "respect", " ", "to", " ", "earth", " ", "center"}], 
    ",", " ", 
    RowBox[{
     RowBox[{
     "Ntot", " ", "is", " ", "number", " ", "of", " ", "sattllite", " ", 
      "period", " ", "over", " ", "a", " ", "year"}], ";", 
     RowBox[{
     "Ts", " ", "is", " ", "the", " ", "explicit", " ", "value", " ", "of", 
      " ", "one", " ", "sattilite", " ", "period", " ", "in", " ", 
      "minuites"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8770543429241467`*^9, 3.877054415904954*^9}, {
  3.8770568133242188`*^9, 3.8770568435456667`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"c4e81e8f-db93-4265-a4f4-5e9372a2c175"],

Cell["\[LineSeparator]Track the sattelite\[CloseCurlyQuote]s moving \
trajectory ", "Text",
 CellChangeTimes->{{3.876871645023437*^9, 3.876871666264151*^9}, {
   3.876871697631463*^9, 3.876871741397941*^9}, 
   3.877569913273814*^9},ExpressionUUID->"ce888c9f-f191-4c90-81d3-\
7b981ecb93ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]t", "[", 
   RowBox[{"\[Theta]isat_", ",", "t_", ",", "\[Psi]v_"}], "]"}], ":=", 
  RowBox[{"\[Theta]orbit", "[", 
   RowBox[{"\[Theta]isat", ",", 
    RowBox[{"w", "*", "t"}], ",", "\[Psi]v", ",", 
    RowBox[{"wre", "*", "t"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]t", "[", 
   RowBox[{"\[Theta]isat_", ",", "t_", ",", "\[Psi]v_"}], "]"}], ":=", 
  RowBox[{"\[Phi]orbit", "[", 
   RowBox[{"\[Theta]isat", ",", 
    RowBox[{"w", "*", "t"}], ",", "\[Psi]v", ",", 
    RowBox[{"wre", "*", "t"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{
  3.876783588563856*^9, {3.876783628765109*^9, 3.876783663186565*^9}, {
   3.876786885679768*^9, 3.8767868974188004`*^9}, 3.8767872695999737`*^9, {
   3.876788528161457*^9, 3.876788530855542*^9}, {3.876789039874627*^9, 
   3.8767890771430798`*^9}, 3.876871635675365*^9, {3.8768717550126038`*^9, 
   3.876871756617453*^9}, {3.876968138026606*^9, 3.876968156608212*^9}, {
   3.877049451753693*^9, 3.877049477471325*^9}, {3.877050854893434*^9, 
   3.877050880763577*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"836d5431-e94e-4e53-a4e5-319130de8010"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]Et", "[", 
   RowBox[{"\[Theta]isat_", ",", "t_", ",", "\[Psi]v_"}], "]"}], ":=", 
  RowBox[{"\[Theta]Eorbit", "[", 
   RowBox[{"\[Theta]isat", ",", 
    RowBox[{"w", "*", "t"}], ",", "\[Psi]v", ",", 
    RowBox[{"wre", "*", "t"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]Et", "[", 
   RowBox[{"\[Theta]isat_", ",", "t_", ",", "\[Psi]v_"}], "]"}], ":=", 
  RowBox[{"\[Phi]Eorbit", "[", 
   RowBox[{"\[Theta]isat", ",", 
    RowBox[{"w", "*", "t"}], ",", "\[Psi]v", ",", 
    RowBox[{"wre", "*", "t"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8768008310595093`*^9, 3.876800844315195*^9}, {
  3.8768717573132477`*^9, 3.8768717597636967`*^9}, {3.876968159727852*^9, 
  3.876968166523733*^9}, {3.877049465012938*^9, 3.877049479192914*^9}, {
  3.8770508603849897`*^9, 3.8770508853411617`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"440a2815-39bf-4fb8-9eb1-d8e7557f0eef"]
}, Closed]],

Cell[CellGroupData[{

Cell["Shadow analysis", "Section",
 CellChangeTimes->{{3.8768717883732567`*^9, 
  3.8768717926867647`*^9}},ExpressionUUID->"3a666312-3f8e-450a-966f-\
ef9b392f483a"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnU9oHGeah5vdyx53w4ZNjMHZi4nHYWASDBbGA7o4CbrYI5JhD0Frs7JZ
iO0lM544OTi2ctTBbBT24iZExiRegg9OExuSCQ44ATkMbKBZhBxQjBBMVgFJ
IEJQCNQ+1T/pU6m661P/rX96H0qiurq6uqrrqbfer+qr7/vnU+d/d/pvKpXK
H/6Of787+frwa6+dfGP073nx0rk//PuZc+P/9uK5P46fGX/t8Km/ZeL/8LfG
XzgeGIZhGIZhGF5+aWJ9fT3rlTKMnlhdXT1/9tzJsTENZ8YpLIwzJWn+paWl
ubm5NNfQMLrg49u3jxwewmSG1y9cwO1nnj6wuLjomf/69HSaa2gYnULW8e7U
FEFYL8lAcNsTkOv1OvMz3L1zJ611NIxuwG2NyGrU9cx584MPCdcTl68gtieq
G0Z+8FsdNJIQEnLcZk5eWkJi5J+3JyZmZmY8M5CffHHvHiNO7Pn5eUtIjDwT
s7pljlG9dk0jTuygEcNdfm4YuSJWEsRwdI3Ng8wrKytu3IlNWu6EN4z8gJaV
SuXM+LguYo8eP8FLEunoPCgdjedRsYNGQgLprbFh7ARFRUx2t2YkNmmJu07S
kpjYhlEOTGyjlJjYRikxsY1SYmIbpcTENkqJiW2UEhPbKCUmtlFKTGyjlJRD
7JWff4wO/putxm6gHGLfWph5qvbqbz5986WZKf4f/+zy1z88zHqljCwph9gP
176vfPRK7buv9PKtbz7kJROzXSsjQ8ohNvEZk12UxvDoS2MXUg6x36/XSEXI
rvWSzMQi9i6nHGKTWpNXaxy9kfzMl+9ku0pGtpRDbOIzYhOop2Y/UeHRRW9j
d1ICsXG48t5RlEZssmtT2ghKIXaYUb931Hw2ohRV7OXl4MEDjf7pL9OkHya2
EaWoYl+9GgwPa/SFu2/idrarY+SNQoq9sBBUKsHoaKB7Me8dfar2ql21NqIU
TuywHghK37wZnD6d9boY+aVwYge1Wqg0OfYrr2S9KkZ+KZbYYdcMe/cGf/1r
OJjYRjLFEju4dCm4cSMcMbENL0USe3Y2OHhwY9zENrwUReywzDg8HLgWv01s
w0tRxA4zkIsXt16a2IaXYoiNxpQZl5e3TTGxjWSKIfbp0+FVvigmtuGlAGLf
vx+MjMQnmtiGlwKITRLy6FF8oolteMm72NVqMDnZYrqJbXjJtdizs2G4bomJ
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

     "], {{0, 207}, {243, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{195.86328125, Automatic},
   ImageSizeRaw->{243, 207},
   PlotRange->{{0, 243}, {0, 207}}], " ", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
bt5iDWVczJ07brJ4sZv88182SZz4+dpL+z6cN0X3LhUrVkx+/vlnGTVqlHmO
1b08rIkBAERl69at8tFHH0nq1KmlVatWpq+wv2bcv3/fvJbYX4O0twCcWebM
mc19Xfe2vEz3v9hnkevaS2cRHh5uPo/Q+fX295OffvqpeewHBwdb3hcQQohV
oa8Eos+DBw/M+Xxff/2143NRL6+IjnLJkohzYKzu48jbJzTUXZYti+guEya0
Oc4bj9xd6vvqdu3amfUvej6jrqGNfFZS5L5T5y/VrVvXvN9esmSJHDhwwKyp
AQC4Hu0o9PVAXzP0c67bt2+/9tcOHjzYvJZs3LgxFm+h89E99qGPQuTa3cty
5vpJOXhxnwSf2iabjqyRFfsWyYLfp8u07aNl1Ma+0n9NJzly6Y/X/llbjq6V
iVuHybygKU9/70LzZ+w8HWB+z4VbZ+VO6C0JC+ezyndx6NAhx1ky+p76Zbqn
RX9eZ77r4ye+0851zpw5Zj21/T3mV199ZWaqW90REEJIXAh9JfDhLl26JL17
95aPPkr57P2Gm3xVzCbTpzOL0lmiMy/nzHGXUqU8zPfX/vm+/f3lt99+K9u3
bzf3B32PrXNK/fz8ZMCAAWb+kM7FTJgw4Ss9pv4ZOqOpcuXK0rlzZ3P+ku4J
vHnzpgAAnJOun9TzQ/R1oEiRIhISEvKnv17Pg9PXizt37sTSLYyf7j64Y7rC
qDwKfyQ1ppUWt662t07vVW2j/LPCn4RL3oHp3/j7vbt5Sp5BH0v5Cf8rfnvm
xeSX7hRGjBhhHhNVq1Z95ef0MZI2bVrz83reTHymX4vOftDZQvb3groHfNGi
RZZ3A4QQEpdCXwm8P+2kdM5OggSez87ss0m7djbmUTp5dN5l5842SZHieV9p
7x91ttKqVaui/Nxff0znBKxdu1ZGjx4tTZs2NZ+jJ0+ePMq95alSpTKzy/Rc
SD0TU9fVnDt3LsozGAAA8Yeem6HP87oH/G1nH+vrBSLcuHfVrItcEDzNdIp1
pv/jhf5Q1zm+TNc66prJujMrSNMF/5QOv/0sfVa3k+EbesuUbSNlfvBUs05y
4+HVEnRyq/xxYa88Dnv82ttw+c5F2Xzk37J870KZvWOCjNk8wPx5bRc3kh9n
V5Uqk4tL8VH/LbkHppFkPbyk16pX5zHaLd2zQDovbSazdoyXwJNbzPpPV1Sy
ZEnzuNC54JE9fvxYvv/+e8e+luvXr1t0Cz+M3m6d6WB/36d7b/QafMWKFZZ3
AoQQEhdDXwm8G+2KNm3aZM5asfdUesb05Mns93a16H5xXUObM+er+7/z5Mkj
c+fOfev5SlevXjXrM3UPUPv27aVChQqSMWPGF7pQexIlSmTOANK1OUOGDJHl
y5fLkSNHnGqWEwA4q507dzqe2xcuXPjWv8/X1zcGb1Xcpe+7th5bJ6M39TM9
4H8P/K9X1jF6dPOQAkOySJ0Z5WXIuu4S8vCe1Tf7BW/6nLHlonqvfE36derX
q3vTNx5aJZdun4+lW2sN3Vfi4eFhHhd6fbpnzx7z/kbf5+isHZ3xqnMRbt26
ZfVNfWdnz5415wfpPnf7fnZd77B+/XrLuwBCCInLoa8E3o7u3dJrBd3Xa++N
ShS3PX0v5SZh4fSUrpzwJ+6yZk3Eee/2+4b9WjRdunQyZswYuXfv/a6ddM/Q
3r17zR6hXr16Sa1atUwXmiBBgld6TH2fr+fJVq9e3ZxHP3/+fNm1a5fcvXv3
vf5uAED0K1eunHnOzpAhA2exvYXtJza90ON9OiiD1JtZUQas6Wz2WO+/sFvu
P/zz/fRxne5V17mXur5T+9YGs6vI/wzO9EqHqWtImy+sIwcu7LL6Jkc7nf+u
j4sUKVJImTJlzHmVnp4R+5d0bo7O/I5vdB7njz/+6OhhtXPVGZx6xpbVHQAh
hMSH0FcCf05nEeq+lCxZMj+bMeMutWp7yO87re/JSNzLnj1uUqeuzdxPIveW
SZMmNTNOr127JtFB90YdO3bM7D0fNmyYNGrUSAoXLmw+s3+5x9TboL2pXiPr
5/tTpkwx589evuya+80AwCqHDx92PDf37NnT6psTJ5y+dkI2Hl5jOruoPHh0
Xxbvmi3+x9bLjZDoeQ2NL26GXDdf99hNA+XHOdXM3nLtLdssbmj1TYt29nmu
ul/aTj9v1TWVOt9Ru8v4ssZ4x44dZgan/T2g7pfRz5wDAgIsv/YnhJD4FPpK
IGr379+XcePGSdq0aZ7NmHGXZs1sZnah1Z0Yifs5fcZNWrWymfPhI5/No2fu
tG7d2syxjAm65+zixYuyZcsWmTRpkvzyyy/mvPo0adJEOSNTe1Sduan7kkaO
HClr1qyRkydPsuYHAGJA//79Hc+/ui/cFWn/qPu7dZ5j4WHZHGsH9bxtvNm5
m2fkYdirZ2crndHpt3uurD+0Is7tif8z+p5D11W+7nGh71Hs8x4vXLhgwS18
M33/pdfVxYsXdzzG8+bNaz5T1nMUrb7mJ4SQ+Bj6SuBF2lPqmX2pU6d6NivQ
Jh062OTiJc75Ju+eK1fcpEsXm7kfRe4tdW9Q/fr1Y3V/0+3bt83zvs7V7Nq1
q1SrVk2yZ8/uuE2Ro9cE+fLlkzp16pi1DrpPa//+/ebxAQB4P/a94DrTw5Vm
Duu6SN273XheDUnbK5Gjo8zQJ6n8NK+m+O6aZbo2fJg7obckRQ8v82/7Uc+E
Zl/5op0z4/z5Pdrn2fdLR3VeoZ5TaH9/MnnyZAtu4evpfhedQ6vvmey3sUiR
IuZ2Wn2dTwgh8T30lUCEhw8fmvVoadKkfjYL2ybdurnLtWvMpiQfnhs33aVX
L3fx8bH3lc/PFq9UqZJs27ZNrKL3fZ2xtHTpUhk4cKA5g/Ozzz4za0Ff7jG1
29SzOb/99ltzvu3MmTMlMDBQbty4YdntB4D4Qs8Nsc/jc3Y379+Qhb/PkH9N
Lyf/0d3T0VF+NTKPmT2pZ3C/bg843t/Bi/tk+PpeUmrMp45/c+9unlJjaimZ
s2OSXL17yeqb+AqdjaCPi4YNo97nru+R7O9DRo8eHcu3Lmr6+a1eN2TKlMnx
/uibb76RefPmWX59TwghzhL6Srg63YOi55JkypTRPBa8vW3Stau7XLtufcdF
nC83b+nMMpvpw+1rbOzvwYsWLSorVqyIcm2BFfR2nDlzRtatW2fWHDdr1kxK
lCjh2LP1clKmTCklS5aUFi1amFkKGzZsMGdixpWvBwCs9vHHH5vny4IFC1p9
U2JchQmFHWd3V5xYRCb5D5dT145bfbNcyrkbp2Ta9jFSdUoJ01nau0vtkHW9
690Hd6y+icann35qHhdLliyJ8udHjRrleK+xffv2WL51L9JzzAcNGmTWgtrf
x9WoUcN85mv1dT0hhDhb6CvhytavXy/58+d/9n7DXdq0sZn9u1Z3WsT5o+t2
dc6Afb6lnpNjn8uuZ3zPnj07Tu8VvH79upkbP2PGjKdfRwepWLGiWWNg/xoi
x9vb21yb//DDD+Y9/rJly8x6Tl3XCQCuRNeu25/nnd2S3XNk2vbRcuHWWatv
Cp66fOeizNoxXipPKmY6ZO0u/29UXsvXuJ4/f94xJ0e7wJddunTJ0Q3qnmv7
Z6C6r0PPMdTztmODzgbXfSX2cw31v/Xsb72Wtvp6nhBCnDX0lXBF2pWUL1/e
cd73Dw085MwZekoS+zl33l0aN35+nnjq1Kkd8yT1TG/d93TvXvyZmR8SEiL7
9u0zZ3j26dNHateuLZ988skL60jt0WuTHDlyyHfffSfdu3c3e6h27dold+7E
jfUeABDd9Lw1+97Ra9fe7qxr3QcSF18HdL/3ebrIeEnXXeqZ47pv3Oq+csSI
EeYxofs3Xnbu3DnH2kvtLI8ePWp+3H62jfb/2hnGpGPHjslPP/3keB+je0z0
LMPNmzdbfh1PCCHOHvpKuBL93FavFex9UJmvPWTvPuZTEutz4A93+Uf552fy
6BoC+/xIPcO7V69ecvXqVYmv9Hr7xIkTsnr1anNt0rhxYzOP3sfHJ8q95bpn
smzZsvLrr7+amfVbt241axsAID7bvXu343lOZ/a9jR49ejh6mrjgwIU90t7v
J0nd09uc6QLndP9hSIz/HXqOX5o0aczj4fPPP5fBgweb13xdM1m4cGHTEep7
Ir1OPXXq1Cu/X+fUxFRfqZ+f1qxZ84XPkLt162b2o1t9/U4IIa4S+kq4At07
oueCpEiR3Nzf/57dJqtXW99REfJy1q51k5w5PZ71lEmkSpUqjnmR2l/qZ/pR
vWePz7SH1D5Sr1G0n9Se0j7j7eVov6k9p/ad2ntq/6k9qPahABAfaL9in3un
78VfR5/XunTpIn5+frF4615zW8LD5N9//CZVJhd3nOFSZPjfZfGu2VbfNMSA
czfPSNpeieUf4z+XZXsWyKOw6J/f0r9/f2nfvv0r6dy5s6O31JmQf/ZZrb4n
is6+Utdtbty4UcqUKeN435EzZ04zy0bPMLf6up0QQlwt9JVwdgcPHpRixYqZ
+3miRDYZNsxNHj5k7zeJu3n0yE1GjnR3nMnzxRdfmGvWjBkzOtZf6hneui7B
mem+cF3foPvEdb+47hvX/eO6j/zlHlOv+3Xfue4/133ouh9d96Xr/nQAiEtC
Q0PN+27751Da29y+fdvx8/rct2jRIqlQoYKsXLnSwlsqEvLwnpl5WHDo3xxn
53w/q5JsObpWwp9wltqH0LmM+lmdnjGjM6Ff9vjxY3nw4IEls6wfhj2QX3wb
OM51zzforzLZf4TcCb0V67flz0RXX6mfDej3QWdt299XFCpUSMaPHy/BwcGW
X68TQoirhr4SzkrP8tA53J6eEd1GjRo2MyvQ6i6KkLfNhYvuUvufHs9mPdrM
PiQ9h0d7Ofv7ab2e9ff3F1eij22dQavn9uiaBz3HR68x9Fyfl3tMPf9HzwHS
84D0XCA9H0jPCYrq2hAAYouu45o/f77j81T9HCpt2rTmcyn9bz3X4+TJk5bd
vlv3b8roTf0la7+Upq9K2yuRdF/eSk5eO2bZbXIW+jmc/TWrXLlyZv1esmTJ
ZM2aNY5fc+vWLUmfPr25byxYsMCy26rrLPut7iDp+yQx94MMfZLKkHXd5drd
y5bdpsg+tK/UPnjatGmSLVs2x+OwdOnSMmvWLMuv0QkhhNBXwjnpfKi8efOY
+/Zf07P3m8Tv6B7xDBki1lrmzp3L8dxdvHhxRy+nc56WL1/uODfTFenXfvbs
WdmwYYOMGzdOWrRoISVLlpSUKVNGubdc99nrfH+dfzV27FhZt26dnDlzxqX/
DQHEvrt378qBAwfMXLwLFy5Y/hy04Pfpjn4qe/+/yOhN/eRGyNudDYTX045a
55hoJ6ZzTS5fjuj89PutM068vLxMf6bq1atnXqfq1q1r5U120HWVE7cOkzyD
Pjb3C51d2md1O3PmuJXet6/UNczDhw93zM709PSUqlWrmjWWVl+bE0IIeR76
SjgT3TvTr18/sxbN3d1Nmje3PX1Pwt5vEv9z955NWrWKuF/rtY6uHdb7+44d
O8x7bF1HaJ+zpOsCdA0inrtx44YEBgaaOba6bunbb7+VzJkzO+boR47uz9Qz
R3XP/cCBA838LF3Pyb8pAFfw4+yqppeatn202Q+OD6edpH6Gpq8xWbNmNa9J
kensEv25w4cPm1kA+r91faWeExmXPHgcKnODJkuBIVlMb6nnLen6y9uh1tzO
d+0rtSPWvSr2s/50jWv9+vXNLGyrr8kJIYS8GvpKOIvjx4+bNWYRZ/jZZONG
ekrifNmyxd2x1lLP0rSfGat9WsOGDc0aAfv52qNGjTLrdvB69+/fN3NAFy9e
LH379pU6deqYs9l1ncvLPaZ2m9mzZ5dq1apJ165dZe7cueZ1NPLcOQCI7/Rs
ncdhj62+GU5l2LBhjteRnTt3Rvlr9HVnxYoVkiRJEvPrdLZlXPUo/JEs/H2G
o7ecHjDWktvxtn2lnlOofbH9tV333zdv3tycrWP1tTghhJDXh74S8Z3ur9HZ
M97eCc19ud73Nrl1m66SOG9uP71/1//B49laQC+ZMmWKeRyo8+fPS7t27SRR
okTPzhhPKj169JArV64I3p7O3tfZcTpPbOTIkdKkSRP58ssvzb9nVHvLdU/Z
119/ba6dJk2aJFu2bDHnntu/LwAA16TnW9t7Ml23HxV9rdCOMleuXObX6RnZ
8YGeG77u0HLL1ldWr17dvPa+jp67p3vq7XspdDZsp06dzNxvq6/BCSGEvDn0
lYjPdD+NvleJ6GVssngxPSVxnSxZ4i7JkkW8B9c1f5H3l+kesgEDBjhmN+q1
UsuWLc0aA3wY3U+m1zraE7dp08acl5AuXTrHnvzISZw4sVn33ahRI7O+ZtWq
VXLs2DGzlx8ArOB/fINUmVxcFu+abfVNcQn6maH9NUHnq0dFzwq3/5oCBQow
f+QtrF+/XubNm2ei17OR6Wt0+fLlHf+mep5O//79zQwdq6+9CSGEvH3oKxFf
bdu2TdKl+9jcf0uWtMm5czaxuj8iJLajZ96XKuXxbA942lfOCteZWBMnTjRn
ZNv3oulaA11zgOile+/13Fc981evT/WzFF0r4+Hh8UqPqfv28+TJI7Vq1ZJe
vXqZeWV79+413y8AiAlnrp+UH+dUM/t3vbt5it/uuVbfJKf36NEjc7abPu/r
rJHXsV+P6WeLOt/FWew8HSDHrsTO16MzQvXcQftsKHv3O3r0aAkODrb8mpsQ
Qsi7h74S8Y3u09R1Y9q72GzuT/+3u4SF01US143e/wcNchcPD3fzuNA1BPo4
iUzX8y1cuNBcL9nfx+vag7g8H8tZ6PXqkSNHzHXUkCFDpEGDBmb2qH3PfuTo
Gs2MGTNKhQoVpH379mbWhZ4ZrPsJAeB9hD4KkaHre0qKHl6mq6wxrbQcurjf
6pvlEvQzRPvzu56TFxV9vS5WrJj5NRMmTIjlWxiz8g5ML//R3dOcJX43NGZm
Petr7OzZsx176fV1tHjx4jJ9+nTLr7MJIYR8WOgrEZ/oNfs333xj7rN/TW+T
gED2fxNiT2CgzTwu9PFRtmzZKDsunZGlz/slSpRwXEN98cUXsmzZslc6TsQs
/V7ovFGd9z9+/HizX79UqVKSKlWqKGdkJk+eXL766itp2rSpWS+ydu1aOX36
tFlTAgBR2XholeNMlM8GZ5LVB5YwVzcWjR071vEcvmnTpih/jX4Grz+fN29e
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
5su3OeNfItZkjh0WcVvv34+d22kFnZM9YMAAx5xs+1k6+rqhcyutvj4mhBAS
N0JfCavpvB69ttX74f98apMLF63vcwhx9ujjLH/+iC6pWrVq5nH4Po4cOWKu
lxMkSPBsPmYaM2fqzp077/Xnwblof61nu+q5EnptWq9ePbMWTM+eeLnH1G4z
a9as5nyFzp07y6xZs8y8Mr2uBSCy8dAqydI3uekq2y1pLKGPQswMWf28SNfM
b9y40eqbGCN0LqR2fn06iZQo+Oq6xf/OEtHzDewh4rcwYq7kgzj+8YeupTxz
SmTdSpHRgyJ614K5X1oH6h2xbnNEf5Ed/iKhTtBf6hr9Dh06mLPQ7We86Vxk
b29v87qgrxWRr1O7zmsto5cOsvx6mRBCiDWhr4SVdE2Ofab212U95M4dN7G6
xyHEVaKPtzJfR6xp0Blo+nh8X3p+gK7vsc849PHxkW7dusmlS5fe+8+E89Iz
cU+fPi1r166VMWPGSNOmTc1rgX122ctJlSqVmUPQsmVLGT9+vOllzp07F+WZ
FYCzCQsPkyHruotHNw9J2yuRLNk954Wf37VrlzkTK23atHJdN0Y7Ad0fPWuy
yD8rRezfjryXWvduD+ktsn61yBUne4m5flVk7QqRvp0j9qn7JHj+tf+//3j6
71FZZPIYkUMH4tf+cftnm/bz3HRdZevWrc1zeb58+cyP6VluL1+nFhiQ2fTz
jafWksAgzgUnhBBXC30lrKLnMeTPH/Ee5Z//ssnDh3SVhMR29HFX+58ez2ag
fSpXrz69WPoAuhZu0KBB8tFHHzn2/uqe8xMnTnzQnwvXoffB7du3y7Rp06R9
+/ZSoUIFM9tM14+93GPqGh2dodqgQQMz/3j58uXmuvjRo0dWfxlAtLh5/4bU
mVHedDZFhv9dDl86EOWv0/u/fb18fO3xjx0WGTNUpGzR5x2drqX8R3GRUQNF
dgaJhD22+lbGLl1bqmeS9+kiUvqLF9eW5sks0qlVxNrTkBCrb2nU9Ez0yLNj
9Hy27t27m+d4vQ796aefItYsfP11lNepyzf9Jv876O/m/l9y2Key1n+N5dfO
hBBCYi/0lbCC7gfJkSP7s/l5NgkLf/rGKw50N4S4YvTx17RpxLVErlw5zVrJ
D6X7y/VczyxZsjj2+tauXVt27979wX82XJOey7B3715zVn3v3r2lVq1akidP
HscsgsjRWWi5cuUy18k9evQwZzfoGrS7d+9a/WUAb+3olYNSeFg209X8OLuq
3Al9/Rp4nUNsPwtt6tSpsXgrP4x2lLofuvj/vLgPWvd3z5sRMW8Sz+n6y6WL
RFo3EcmZ/sUzyXVP+TLfiI7TStqXr1+/XkqXLu14Ttbn48GDB5sZH/ZrUP1M
St8b6Pp5XWf5umvVbYH+8q+JEZ393/v+ReavnWX59TMhhJDYCX0lYtvZs2cl
S5bM5n7XqbPt6fsa6/saQlw9+jhs3972bN59Vjl//rxEB72G9vX1NTML7dct
ZcuWNWdMA9Hh8ePHcuzYMVm1apUMGzZMGjVqJIULF3bMJogcXaOZLl06KVeu
nLRp00amTJki/v7+cvnyZau/DOAFGw+vlvR9kpg94MM39JbwJ2/e/KvP20mT
JjWzAHWdcVx14ZzIxFEiJT+Pm31bfKFH5e35PWJvfOS+V/eN67nluu7ycSwu
NdfX+8WLF7/weq/r3ydMmPDK9efmzZvNvGvtK/WzzTddrwb/Hiw95rcR726e
8p/dvWS4Xz/Lr6EJIYTEfOgrEZu0q8ycOZO5z/XqZX1HQwh5Md27R3SW+plC
dHWWKqr1FgULFjSz9d/nfHLgTfQ+p2uFt2zZIpMmTTKz0nTPoV4jRzUjU3ue
L7/80sxYGzlypKxZs0ZOnjzJ/ROxbvaOiaaX0VmVaw74vdPv1edUvT9/9tln
8vDhwxi6he8u5J7I4vkiNcs/39OcPLFIw9oiy5dE/Dw+zImjr65VzZVBZGjv
iHmgMSU0NNSs6dXz0uz7KcqUKSNz5sx57fVn+fLlza9t2LDhO123Tlk1TtL1
8jFrLX+d3ViCg4M+6DqYEEJI3A59JWKLXjfa11X27Wt9L0MIiTo9ez5fZxkT
5+XoPKsaNWo45llly5bN7AvTs6SB2HD79m3zHmju3LnStWtXM/NPz1i23ycj
R2ew6nkQderUefra1desH9q/f7+ZeQDEhHLjCknegell/4X3m5/RuHHjiD0s
nTpF8y17d3t3inRoIZIu+fN5lN+VE1k4++nj8P2PeMMbHNgr0rODSNa0Ef/u
CT1EfqobsR4zuujz6NChQyV16tTm/qZn6ehz6ctnfL+cfv36mV+fO3duCQwM
fOdr16WbFkv+/hlMZ/nPCf+QgB3bLb+eJoQQEjOhr0Rs0PMqc+fO9ez8P2ZV
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
R8RKFy9eNOuF7LP/9L/13FL9ccBVhYeHy+nTp2Xt2rUyZswY0+0XL15ckidP
HuXe8o8++khKlSolLVq0kPHjx5sZsTr3kDmx0efAhT1mXaV2lSv3+1pyG/R9
v66f07V0r+up9VvesmHUXaU9WzfG8g1HtNHnhdatWzs+09DZpvr8sH79+tde
K86fc0j+r9CzPeL/ES6d21yQwMCdf3p9qZ+F5MuXz/wdeoaYFde49s7yLz0S
yow1kyy/5iaEEPLuoa9EdLh8+bJkyJBe3N3dZPFiukpCnD3z5kX0HFmyZJZr
166J1W7fvm3OLrHP+kuQIIH8/PPP73W+BODM9PG6fft2c150+/btpWLFipIx
Y0Yz5+HlHlPXRhUqVEgaNGhg5tbqeqnDhw+/0wxEiBy5fNDMq9Q94LG9rvJl
AwcONN9bPYs+KpNG/3lXqSmU+/kZ0ogf/vjjD6lfv77pq/X7r6+V+vjX87ve
5npRZ1gO6X9K/pbmkbkPfJ4nVObNPvzaX69zde1n5Fl5nTt55RjTWabu6S1z
/j3d8utuQggh7xb6SnwonYlVpEgRcz8aOND6HoUQEjvp1Sui39B1WzqrPy7Q
5yM9Q1ln+9n3wNasWVN27txp9U0D4rSQkBDZu3evLFq0SHr37m3mxObNm9d0
/y/3mNp55MyZU6pXry7du3c382x1tqzuOcaLTl87If898L/M2Tp+u+dafXPM
eUz6nK3fxxkzZrzwc7pu0j6j8s9SMLfI5vUWfQF4J/rZxLfffuv4PEJnQujj
+31nSW7etEca1r5m9ohrWjS8LNu37Xrh10ybNs289uqcFl2rbfW17vjlI8S7
WwJJ18tHFq2fa/ntIYQQ8vahr8SH0L1iOi9L70Pf17c9/f/WdyiEkNiJPt5r
/zNirUbjxo0lLtFrcj8/P3Merr1jKV26tNnzxh5X4O3pY0nnxepcu+HDh0uj
Ro3MZ5Q+Pj5R7i1Ply6dfPPNN9KmTRuZPHmyWb916dIlq78MS1y+fUEKDv2b
uHW1yZwdk6y+OQ5nz541+4B1/ax+b9XpkyJZ0kTdT/7P30XaNhVZskDk/Flr
bzveTOdBrF69WooVK+Z4XOre7JEjR0pQUFC0XD/OmnZE8md78Gy9bagsWnDQ
/PjmzZslTZo0pq/Ux7/V17n2jPxtgHh085TMfZLLsk1+lt8eQgghbxf6SnwI
3X+p958iRTzkwQPr+xNCSOwm5L5NChaM6CzHjh0rcdGmTZukbNmyjus2PY/E
19fX9DAA3o/2/jonVs9umTRpkpmJp3s/06ZNG2WPqf1Y0aJFpUmTJjJixAhZ
s2aNnDx50qkfh52WNjVd5bjNg6y+Ka/Q50D9vuh+/5s3HkmJgs/7yU/+JtK6
ScQZ4GdOWX1L8bYeP35s1jrrumj93uqaSu0sp0yZEiPXkNv8d0mTelfNOksf
ryfSpe15+cc3FczfrefRW32N+3L6+3Y1j8c8/f9L1vqvsfz2EEIIeXPoK/G+
dI6/fn768cc2uXSZmZWEuGrOnXeX1Kk9zPOBrq2Iq3bv3i21a9c2t9O+L07X
f9xnEBsQrXSerM5gmDt3rnTr1k2qVasmOXLkcDz2IsfLy8us/dL3oX379jU9
2v79+53icRl0yj9O7AF/HZ1L6uZmk//7313mjJ2Fs0VOnbD6VuFd6SwHPScr
Q4YMjjko5cuXl4ULF8bKteSU8ccke7pHz/ruAMn19zLvvd88ptNpbgvTWf7v
oL/L5oBNlt8eQgghfx76SryPEydOSJIkPuYs8J276CoJcfUEBtrE09NdUqRI
LmfOnJG4TJ+/mjVrZnoS+9nIepbI687LBRA9dM7toUOHZOnSpebcFz3/47PP
PhNvb+9XekztXDJnziyVKlWSjh07mlmL2oHcuHHD6i/Dady5c0eyZMlm/q11
3z7iF30s9O/f/+nrbgpH969zZ/VcrNi+npw/b60k8lpnOsv0/++hTBx93PJr
3NelydTaprPsOreV5beFEELIn4e+Eu9KP8f95JOIvSZz5ljfkxBC4kamTImY
568zI/Xcm7hOZ+p17drVMYcvceLEphfRPa4AYo/O29PPOXS+rM6VaN68uZQo
UUJSpkwZ5d5y/fGSJUuaXzdu3Djz+3Qmo/45eDc6z1DPT9K5o3xmEz+cP3/e
nO2t80ftr106Q1r3PVlxLbljxw6zRtrNzV1qVv63pEgcbvaIN294WQIDd1p+
rftygoKDzN7w3zb6Wn5bCCGE/HnoK/8/e+cBX9Pd/3H3ZKKiUqnxhBIaajXC
Y9RjFH/UeOxNa++9R4wYoUZIiESpVastSkuVxxYUqaJaqxOlWqX2jO8/n+91
roibyLj3/u74fl6v94vccc7vnnPvOef3Od8hSqv0/jqDBiVcjNiBRyIIgv3Q
q5cx37NPnz7kKELuKvqIoEcAxo5+yKixd/bsWdVDE4lcXn///Td9/fXXHF85
evRojrcMCAgwm1uOOE3cL0Hc5syZMzmOE/GciOsUJS/E6GH7ITZPZL86ffo0
97tyd3c3+fbDhg3jGrIq55I432M8qF+Lvz/79CSVe8PYi6dWpVv0v63Hlc93
BUEQBMdE/EpRWoRab3p/nfv3JQ9cEIRnuXvXQOXKGX2ElStXkiPp3r17tGzZ
MipatKgpH7V169Z8rhSJRPYl5Hp89913XO9yypQpfB1bunRpvt9gLrcc9TNb
tWrF9TQ//vhjrq+JexWW0qXrF+jXKz9ZbHm2FHoeVa9enbfVihUrVA9HlERx
cXH83UX/HOyjggUL0sSJE9nHVz2PXLp0Kf++cuXKRbt27TI9vi/2KLVreo09
y8C8D7ifuOqxCoIgCI6H+JWi1OrYsWPk6elBvr4aXbggsZWCIJjnl1/RC1gj
Ly9POnnyJDmaMHf//PPPuW+u7nfUrl2btm/fzj2RRSKR/Qq/X9So3bJlC/ch
R54s+pKjP7m53HL0M69Xrx73N8c9WcSqoSZEWn7rv135mQLff4XeXVrfip/M
ukI+PmpjIMcY20+kVvj+4ZyDc4/+XS1ZsiTNnj2bc/hVzx8B+ushLwF+JX47
5l4zaewFyurxmAkbf175mAVBEATHQvxKUWqEmuyBgYXJYMiUcP0kcZWCIKTM
xo36/KoEx0E5qjAfq1+/vmm+WLZsWY7ngiciEokcS6hZGxsby94K8mjx2/b3
9zfrY8K7q1KlCvudqBcB//Onn3567rd/894NqhH1Jvfv2HDsY0WfzDJau3Yt
f/ZKlSrRgwcPVA/HJYXvF84xONfo38XKlSvTwoULlc8Zk9KgQQMeX48ePVJ8
3cqlZ+j1PMb+4d3bXbHLmpYg7ps45WMQBEEQnkX8SlFq1LFjR/6ejB+v3gcR
BMExGDbMmBeOWpCOLsSX4zyp18xD3+IPP/yQ7ty5o3poIpEog8I92W+//Zbz
xCdMmMC5t8WLF+c+NEl9TOSbBwUFUfv27Wly2GSqH16JvcqJm4ap/hgWUdeu
XflzYjuIbCf0qIOPXrhwYVMNA9SDXL16tfK5ojmmTp3K4yxVqhQdPHjwha/f
8tV3VCX4DnuW9avdoN27jin/DElpFl2DOXT4xZ9HEARBsA3iV4peJNSgw3ek
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
ehjp0j///MNzbb3enr3E9OJ7j/EEZbEf/wxEBRvoX0/6wfQqaF9jSy/Di2ic
5+7jodFsBf2MUgK+MLY16gVa2mMaMWU3x1h2H3csxddNnz6dWrVqRf7+/qbj
MHqyVKtWjT0qxN2ldwyREUvI2yOeShe5YlN/rdqUNznGMjx6hnKvz5mZO3cu
e9zo24Nc8fLly1PevHlNfeKTgsfhcwYFBVGLFi1o4sSJCdeZm5X7NoLgiohf
6bgqU6ZMwvWsge7fl147giC4Nn/9pZnyJUUiawmxZjt27KA6deqY5jXIQ9yw
YQN7miJRWvXHH3/wPDpxzVTUisTjqnXv3j0KKFiQNDuoo2iOCcU08tAykXfC
+KaVtC9/L62g33p29yd514r6GaXEjFLGmpqZvb05Bs2SXlJ0zCKq3OseVel9
l2Lmf/icz4QalSVLljT1X8G/8JF69epF8+bNs9g4Kpe+yDGWM2essJmP1jG8
BfuVgyN6K/f0XBHUE0A8LnLE0csMdVqRNw4fPLkamThWBwYGco+noUOH0urV
q+nw4cPKPR1BcFbEr3RMoUYbjpnV35Y+O4IgCCAwYY6HPqa27EEhcl0dOXKE
a2fpc2jUz1q6dCl7PCLRi4S4ScyREUeJ7w/iKlFr7/r166qHZhLi1TC2Wop7
7KREe/8nvz9vjfuHqx5Peinv8+Se26vqa1YmR5PcT+8LWto36jLme46xDJm2
jb938IHgHem/D4BeK4jvDA8Pt4p31e3dr9mv7N011mZ+2Zi5w9mv7BjeXLl3
JzzLjBkz+HsIjwT9zooXL879fJKrkQmPE73qEe+LOE58jw8cOKDc6xEER0f8
SsfUvn37eL+NHi1+pSAIAujS1ZjXc/r0aRKJbKWzZ89Snz59TL0eUAsL8Uf2
5DuJ7EfHjh3ja27d50adysWLF3PdSnsSarfm8vMjz4Rxoie3aq8sOeBRvpnF
uC2b57ZfXzUlurxmPHcV9NK4v43q8SQHehtlcdfIM+FYh9oFlvSG3p+9jv3K
yu99Sz4+PiYfCP+vX78+94m2tj81dfKn7FfW+s+vNvPE5n8wn4ZH9qfIGMvG
rArWIzIykkJCQqhr16783QwODubefPoxPSnu7u78POrJtGvXjusWbd++XbkH
JAiOgviVjinkR2C/rV8vfqUgCAL44APjteEnn3xCIpGtdenSJRozZoxd5vWK
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
ha+xWrduTdWqVaPAwEDy9vZO1sfMnDkzFSpUiGrVqsXv++ijj+jgwYPKfUTx
K0VJBZ8e++rLLzORai9AEATBnlm82BiPsnbtWhKJRKkT4hM//PBDvi7Wr5M7
dOhAx44dUzYmxABu3ryZqlatarp+r169On22aS37lX0/aadsbI4u9Irneot+
rtVrxxzorc3fLd+0bYv/vuqWYc8XHmDX1zQqntmYg82/vYR/g7IavcCo0i/O
Lw8Z3Y39yjEjO73wtQWf+KvIJ0/6XIMnnyc4Yd2t/uVGZV8ybg/0Pa+c3fh6
xKQiRhO1L9FX3k3LxK9r/aQeaM+ePS02tx8+ZQ/7lUPC9irxFt7If4P8X7lr
4/XOV+6pCIJge8LDw7lnD6676tSpQyVLluQaG8nVyMS9ZdTzQQ9F5KOj7znO
66r9RfErXVdTp07lfbVnj3ovQBAEwZ5Zs8Z4Pl+yZAmJRKK0CX3D4fWXKVPG
dG3coEED2rt3r83G8ODBA1q9ejWVKlXKdG3erFkzjimAzl/9hf3KURv62GxM
zqYVK1bwtu2Qz7XjKwHiKnM/iTtEP5rUvGd4oNFf9PHQaHZQ2mpWIk5ySGGN
/pPdmEuu/85e89Konb9G4W+mbXnhzYLZr+y+IPyFr23vb/yc6I+u55XDM4VX
65EwFtTyRNzo0EDj63ImbBevhMcnPcl1x/dlVqLxvftkeZ3zGf1K9NW11Pw9
dPpm9it7hx5R4h+UK/YnebvF0wfzbbO+iVFjqOzkAIqImaXcOxEEwT6AD4n8
8O7du1PDhg2pXLlylCdPHr6nbM7LdHNzI19fX66l2apVK+55vnXrVuW+o/iV
zi/kV2BfxX2j3gsQBEGwZxCHjuNlVFQUiUSi9Onx48e0bds2ql27tuk6GP1Z
Pv/8c/Y0raHbt29zvhT6aurX3d26daOTJ08+87qTl75jv3LKlpFWGYcraNq0
abyNBxYWvxKMe0NjDw99Y6aVSnmboE93dnejXzksMPXbD/1t6vu5scep/6bw
f8S4TsxI7ct/a1Rlf2yqaljCK22WW2NvEl4p4iwxBtTKTNxbBzne+IzIC0/8
GaODn10ePE/k0w8tbPxMNWvWtNg8/f3Z69iv7BxyUolPULXsBa5hOXfOEpus
772ZTfi4FjJnqHKPRBAE+yYmJoYmTZpE/fr14/tElStXpoIFC5p6EJrLLUdP
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
7h4xYoQsWrRIe1k8VSeJv5s1a1b6lX6sMWPG6Gu1bRvzKwkhJD6WLLH7lQsX
LhSKouLW8ePHpVu3bk4fELMyMLfxwoULSbrf69ev6/xpe47N9y5arciZM2c0
Kynt02HqV6ZqECy9evWSX375xWV/I1C0YsUKfX0aPvnXHEZ/ZFJBu6fWOKsl
Lz5hz5j8bzZL5+EkZpY3aiKfuZdl2Sjr4/uM+JuYI4554jGzLp9MYWk25uj8
vuVdtspufy4aNmxofB9PCCH+AObdoMe2Zs2aUqhQIQkPD4933g08y8KFC0ud
OnX099Avg1zwvXv3erSH+2HQFwPPFGujX+m/wjGL12rNGvNeACHg2+/s+QSx
8cOPNrlyhbXAxAyzZtm/t1etWiUURf1VX331lTRv3tx5LR7X5tEDdO3aNZfc
f6dOnZznzxcvXnTJfcbUqd9/Ub/y7y1DnH3rrVu31ppOKmFCr5fONMrgW77Y
4zK1kE1qZ7IkxLJJ8TSWNI0IksHPWeoVVvy7va8bmZITnn/8HM9R+W2SMsgm
wbZk0i8JtZFTCiWT1k9b8nyqB7Mu86a0pMVTQeq1mn4eH0WtTPbPko4dOxrf
4/sqA6f0ltqjX5KZb80wvhZCiOdAflWrVq3kpZdekty5c2uvS1zzbvCzzJkz
S9myZaVp06bagztnzhz19Ux6knGxefNmvRbumKFIv9J/tWTJEn2tFixgfSXx
DlDDVr/+/bpzy0omT2ax5IUXLMmY0f7zkiUs1gQTjzN6tO1ePfo2oSjqvtCb
XatWLec5MK7XL1u2TG7fvu2yv4Fr+Y45PagDcPUccejO3TsSGhUsdWZXkHff
fVfy5cvnPI9HXQFqCaj4de7cOX3O4NWZ9rrcxcC8loSnsDRnMq6czjr3fLYc
IZZMK/z4nmWnXHbPM0NyyyW+4rjnbVqvmT3k/vlVcssmJVJb0iWX92Zdol4V
a0X9s+m9v6/y0oiieh1mwvSxxtdCCHE9AwYMkAYNGmjOL2ZsI3snrh5uZE7m
yZNHZw8ijxK9tjhf27lzp3EPMqHs379ffdWIiAh9THjs9Cv9V8g9xWs1aRK9
H+I9XL58/3N14cIHj83du5PJUxH2z+DZs3ncEs/Ru7f9uPvss8+EogJdd+/e
1XOIF1980fl5Xb58edm0aZPLvcSffvpJChQo4Ow1fvrpp116/zGVZ9Q/pPyU
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
pyUx90u/0reE9xderxMn6P8Qs/z5p02eirCf40dGWvJs9Pl+1ZeDor8HLEmb
1pJ8+Szp19+SH4/zWCWe5cD/7OcpyMemKH8RvDmcV1esWNF5/l26dGlZt26d
1jiaEM4jy5QpI19//bXO8nGA/0Z+DdaIuZDeLjy3mzZt0j2Ptzy3nhT2bHjM
jbP6tl85qsB93xHzvhP6e1Uy3P+9/s+67jlo9ZT9flF7mJRMTFcBbxKzy3OH
3M+6hIcJLxOeZmKzLts8bX+ctWrVMu5f+DItxtZTv/LNSR2Nr4UQbwHzbvr3
7y/169eX4sWLax8JrofG1cON66d58+bVfuSOHTuqp/nee+/puYhpP8/fqVev
ns4YQi52TLp16+bsAaJf6f/C7E28Xrv30AMiZvn6G9u961XJtJ4NPbi/nU4m
R49acvkyj09ijlWr7McmznEoyteF+TXorylSpIjzfBz918gDMqlLly7pmn78
8ce//Nvly5edaz169KjnF5cEof+rbt26D9SuLly40EjtqqeE1xCPtWAq3/Yr
e+S+v39F33NCfge926nu9UznDnX943fM8SmX3rvmGaEnHM9RxhT3n7PQ6OcB
OZToJX+cGeml7z1GXCM07W34MrVGv6R+5ZApA4yvhRBPgx7szp07S7Vq1SRf
vnySIUMGve4ZVw83crrhX2LGFz57kPGyfv167T8x7dsFIuPGjdPr6bHNG3LM
X0TPPf1K/5fjGvjSpfSDiFkmTbJ/X/yzKPNUiXfhODZx3kJRvqrr16/LnDlz
JGfOnHo8o5YAM2wOHz5semkqnDfCR41Nx44dc+4pLly44Pz5zz//HH3+stRT
S0ySkA3apk0bZzYo+puwn4IX649CPQp6l72hDjCxdMl133tDHWFCfqdR1vu/
80Yu1/uVeD4z3fMEUYdo+jmKDfTDV/y75fRtAfrqMbtn6CN62eFrpgq2JGVo
qF4jNO15+DJlhxdQv3LyjEnG10KIu8DMu6ZNm2rGPOZyxDfvBj9HzjR8sFat
WukcQVw/3L59u3F/jtwHvSjox//4449j/Xe8dng9MXs95s9xDonaS8znQY8L
/Ur/0LZt2/T1GjHCvCdAAptKleyZ9oMH068k3oUjV/Wrr74SivI1Xbx4Ua9T
Z8yY0dnbhJqD2OoYTWnq1KmanxmXsJdwzLFBrzX0wQcfSPbs2bV2wpd08uRJ
rd1w5HEiHwvn1qdPnza9NJeqb9+++vg65vBOTy0hROV9PL8SuYuOeTTunI8+
KHpdye9lWWKGt+nnKS7QD94plyXF0mC997Muc4RY8p+slox//q/94qjFxO0w
a9e0D+LrtB3/X6kxqpzxdRCSVHDtomfPnlK7dm3tw8iUKZNmF8blS4aGhkqB
AgU0U6Jr166aiw0va8+ePca9OBI/yKzE9U7MOIrrNujNx+uMfnHHzyZMmCDZ
smXT1xznu6ilxWtOv9L35ejZadEySEx7AiRwuXQJ+1D7d8zevfQriXeBHFUc
m56ckUxRSdWvv/6qGU2oNcDxGxYWpnnw3uaLIYsIew7sJ+KSI6sI/PTTT86f
w+dztV956+4t+fLUIZfeZ2xCneiYMWO0R81bfeSkaO/evfbczrTe66c9iumF
Uetn9x8rZ3h0XWDBMPveGbO8J7pg7kx8NI+wfy89lcKSqYnMifQkeD6w5sjQ
+1mXli2ZFI5+ztpmt7SPHrdzZH+2b9/euEdCCPEs8Jzatm0rlSpV0pkq6NFG
T0Jc827gSyEbGr4Tzndmz56tdXWx9RAT7wd+MjLM8drGnAceE1y/Tp8+vR4D
JUqUcL7WLVq0cPbuw/PEsRHTz6Rf6bvCLEt8DvyrFP1KYo61a233skMsza00
vR5CYoI5UJkzZxaK8gWhd7pDhw7O+TSoQ4AXiHxIbxNmZ+O8E3sS9KlPnz79
gX9///33NfsxXbp0ehuA2dvILoLfh9x7V/uVyw7M1R7KQz/vd+n9xiX06WOP
FbNPH+fQhw653zN1pzBXKEv052ZokG/4aXHxyj/svuDfktvinR9TPaP9dqgd
jK1u0B2USGv39tB7bfp5ehxG5LdJnSyWs69d57xaNs3mRC94iujPLmQlmPZO
CCHuYfDgwdKoUSOto46IiIi3hxs+BWZEV6lSRdq1ayejRo2SJUuWaOa2aX+N
uI433nhDX2ccCwBzwJctW+b89x07dkjLli3Vx3bcBpQrV069avQMx7y/hg0b
6vkh/Ur/ELLfw8Isnc9s2hcggUmbNvbvqIYN6ZsT7+LqNUtnQOFaL0V5sz77
7DM9/3ec8yP7Z+7cufLHH3+YXprb5A6/cs3ny9SvhG/pSTnmIBUtWtS5T3v5
5Ze1lsBXhb53PI4O2X3LT4sJ8iLhQeJxVM3418cxqWAy+dc937DME56d242/
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
19Mkm+WcBWXag4oJrk9iZgkyBdG36/CeMmXKpO+NkSNHGl9jfEyeMUmSDwyW
YkOfMb4WXwXzbpB3WqtWLSlcuLC+9vHNu8H3O26H4+PNN9+UKVOmyOrVq/Vz
1LQnQwiJHfqVvqtLly7p9aDy5ehXEkICm8hIS89DkTVIUY+jY8eOSceOHbUf
zLHXnTBhgn7HUpS3CbOd1q9fL2XKlHHuweHXbNy40W1zn5CdiVq2YMsmQ/PR
s/QENcLt8+MKpjKbZTmmgCWhQZZ+Pnqz/wffql27duqpxsy6jIyMlGbNmsnE
iRONr/Fhek7qrL3gDcf+n/G1eDvIA2jVqpVmoeE1RU4Gas1j8yXxs8yZM+vM
pqZNm+p1R2S7wPMw7bsQQh4f+pW+LeRpBAfb5Oo1epaEkMDk5Cn7+Squr1NU
QoVa3MaNGzv3trlz55a5c+dqbiVF+YJ27dqln3uOPXuBAgVkyZIlcuvWLZf/
LcyR0PdJqHfOgvE3phdOJpGh9s+mek8GGVtHkdT2NTRo0MC4Z5VQkOeBfS2y
hx3vDcxyLlasmF6bctds88fltTFVmV35EAMGDNBjrXjx4jo/Ebm9cfVww0PP
kyePVKtWTfMox4wZI8uWLZOdO3ca91cIIa6DfqVvC71reP22bWOGJSEkMHnv
Pfu5K/p6KOpRQh7Vyy+/7NzzYA7oypUrWZtL+ay++uornZcMTwbHdEREhM4f
uXr1qkv/Dubm4v7rG/TPAolRBSxJFWTPsuyTx/N1rS2fsvtEuXLl9Nl5NsOG
DVNPP0OGDM7PfHhgL730kvTp08fo2gZO6SUNxlSXGW/55nObWHCu1qVLF/UZ
8+fPr69NfD3cqKXE93S9evW0/x/H4rp162T//v3GfRRCiPuhX+nb2rJli75+
/fuzvpIQEpi0aWPfU3FuMxWX4EWuWbNGexIce6DKlSvL1q1b5c8//zS9PMqF
wnzwbd9+KH/cum56KR7XiRMnNMvNkeWXNm1a9WvOnj3rkvs/ffq0fZauZZOB
edkX7gkwl90W/Vo+kdySiQU9l2U5PJ9NQqJfZ9SwYW6JaY8rqSDrsnfv3lKh
QgX1Kx3fAxkzZlQ/E/NVTK/R3xg1apQ0b95cXnzxRcmZM6dmQsc37wbXWfD6
tGzZUmcqzZ8/X7Zt22bcKyGEmIV+pW/r2rVr0ecSwfLPovQrCSGBx59/2uTJ
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
IIQQd0O/0n+EOn+8lgMGsCecEOLftGtnP6/H+TrlXzp//ryMGDFC0qVLp68x
9nHdu3eXEydOmF4a5WOas3Oy1jK997/5ppfis0LtJLwR+CoO/+Tll1+W7du3
/+W2586dk/z58ultaobTs3Q3yJ188l6W5etPPd7z3Tir/fcw4x01faa9Pn8D
GbDYWyNP0tmzbYumgE1slf/qS+I2GTNmVM8fv4dMytmzZ2veyYEDB4z7BYQQ
Ygr6lf4jXAtPlSql5MjBnnBCiP9y6xb2WJZkyZJZMw0p/9Avv/wiPXv21FoS
Rz/dsGHD5OzZs6aXRvmofr30i4RGBUu9d/5teik+L+RubN26VSpXruz0WDDf
Y9WqVeppOnTq1CntY8W/wxMz7en5O0OesySFZVPw/xPyO62yW2KzJYveM6SS
IUOGGPf2fB30fGNWOOoq0Q+A5zW2WkkrtU2CwmzyVNEs2j/erl07zcFE3smn
n35q3BMghBBvhH6lf6l58+b6eh74n3lPgRBC3MFHH9nuzRfrIZTvC/OJW7du
7ZxPnC1bNpk+fbpcvXrV9NIoP9D4LYNkyIfdTS/Dr3Tw4EFp2LCh05PJnTu3
zJ07V27cuKH//vPPP8szOXOKLfrf/pONnqW7afmU5ZzRjprL+G7b+mlLLJtN
PTXMUzLt9fkKmP3drVs3qVGjhhQsWFBrIZHtGte8G+ROFilSRGfyoD9gzORR
kjoqWEqOzm18708IIb4E/Ur/0saNG/X17NmTPeGEEP+keQv73gxzLinfFV4/
7OUc+z3MPF20aJHOj6Moyvv1/fffS4cOHZxZfY4cxIsXL8qvv/6qveHwLOtk
omfpbko/Yf9erJAuKM7b/Deb3atMmyaNzmYx7QF6I5g1hZzk8uXLS65cuSR1
6tSanRybL4mfYT54uXLltF4E/i98+y1btvxlvz18eV/NphiyrKfxvT8hhPgS
9Cv9S9jnpU2bRjJFnxvevkPPkhDiX1y9ZknKlJbkzJmDc8F9UHjNcN7x0ksv
Ofd8yOtC/jJ7+ynKNwVvEjOSUbOH9zT+t1+/fjob68UXX9SfYTbM9CTMsSbx
gxnh4SnsnmXb7A/6w5jXXj2jfTZPlsyZtQfZtC9oEszFwfH52muvSbFixTRj
Ejkkcc27QR3lc889p/O+O3bsKGPHjpXly5fLrl27Erzf/tfYZyU0Krls3bXZ
+N6fEEJ8CfqV/qcuXbroa7p1C+eEE0L8i+XL7fsH1IZQviPk273//vvaH+fY
A77yyiuyc+dO00ujKMpFunTpkkyYMEEyZcqk73HUXSLrAe91/PezqYJk3PPx
9yuTxBOV15LkVjIJsWwyLJ/ds5xY0CYFw+xeJTw3zJY27Rd6iilTpqi/iPlQ
qN9Pnz69HpNx9XBjxluJEiU066BPnz56Hx9++KH2AiRlr71s87taW1l/ZmXj
+35CCPE16Ff6n/bt26evadNmrK8khPgX1f/PXv9w9OhRobxfmAM3Z84cyZkz
p33egGVJ06ZN5fDhw6aXRlGUm/THH3/IvHnzJDIy0vm+h1cGnyh1iiDpEcn+
cHfRJJv9OzJ7iCV98liS4V7NJWrakQts2kN0B8OHD5cmTZpImTJldNZTXPNu
HMdi9uzZpWLFitKqVSud6fbuu+/KJ5984ra9dss5r6lf+c6Gmcb3/YQQ4mvQ
r/Q/od8uMjK3pIg+R7l4iTWWhBD/4JeTtui9RjLdk1DerQsXLsi4ceN0JoGj
nw61/z/++KPppVEU5SGhrnrNmjVasxbTL0KGYo1w9oe7i+Jp7F6dZUum2YvI
VjTtKSYV9HBjxt6rr76qdfqo4Q0JCYnTl0R/N+bi4PaYkzNp0iRZuXKl7Nmz
x+N77Z6L2knNqWVk/4Gk1WkSQkggQr/SP4V9Il7Xd+aa9xgIIcQVjBtn7+FC
nj3lnUKOHXLBHDl2mJEaFRUlp0+fNr00ipJLNy7I+WtnTS8jIIX6NeT/xfSU
nkhuyYBnWWvpStAH/kzofQ8Pvc2mvcbHAfOa2rRpI5UqVdL63LRp00pwcHCc
824w4wnXMFFfiQxV1PNjb2t6f00IIcQ10K/0T506dUqvOZYqGSSmPQZCCEkq
d/+0Se7cloSEpNCMNMq79PCcYNS+ICeNrxXlTeq3tqPkH5NZ/rh13fRSAlbI
gmjUqNED/lOBVJaML8Rcy6SAWtV6TwZJCsv+vObPn19rK1FnOHLkSOM+5MPg
Oha81JIlS0pERISkTJkyzlpJ+JW5c+eWqlWrSrt27XRe0JIlSzT/2PQ+mhBC
iHuhX+m/Qg8EXtvDXzDHkhDi2+zYYd+DIW+K8h599tln6j049pmoh0FuHfLr
KMrbNHHLYM2Re//gQtNLCXgdP35catas6fQt0bv8r7SWjOc8nsemd6Ql2UIs
Z/bG66+/rp4gPpvxs1y5cmk/tac9yWnTpmkvNuYtFShQQPNBsL645t2kTp1a
ihYtqnO70fuN31+7dm2S5914K+hNxzyfh9m4cSO9WEIIuQf9Sv8VvvPw2nbt
Sr+SEOLb/Oe/9r0Yzu8p89q+fbvWujj2mcWKFZNVq1ZpXh1FeatOXzolfxuU
Qv49taBmfVPmdeTIEZ3F48y3tCWT0mktGZGfvuWjGFXAUo/Xdu+5wwzsh2sp
kfWIf6tWrZrbfMnRo0dLy5YtpXz58uqNwndEbWdsviSubWXLlk1v26JFCxk8
eLBe49q6davxPbGJPTj8XMz/cTw/mTNnljx58sjTTz8tWbNm1V53XKedPHmy
3/q2hBASH/Qr/VfYN2bNmkVSpbLkylV6loQQ3+TMGfSD2bQ+gx6DOeE7ZfXq
1VK8eHHn3qpKlSqybds2vi6Uz6j7ilZaY/nJdx+ZXgoVQ++//76kDgu7n02I
6yBpLInKy3zLh5lcOJnUDLecvd/opYb3N3PmzL94iRMmTJB06dKpd9i1a9dE
e5Koz+zbt6/UrVtXXnjhBcmSJYv2msfVw406SvinNWrUkM6dO2suJV7j3bt3
G9/7eht4Xh1eLq4Fxvw3zC53fOfCuwxEX5cQEtjQr/RvjRgxQl/f+fM5J5wQ
4ptMnGjf/2DPRHle6O2eP3++1nw49lQNGjTQXnCK8jUd+fVL9SsbzK1keinU
Q7p69aoMHDhQa/Niel/It+wRSd9yWmGbNM5qSViwzflZXLFiRfUk4/Ma+/Tp
o7fFHDTUQsZ3W8zRRhYxrkXlzZtXvU7kEsfVw50+fXqd/47ec/hus2bNkg0b
NsiBAweM73FNMm/jLFny0fwE3Rbz2/FcwgeO6zbITsBt8D3MXnFCSCBBv9K/
dfLkST1HKVaM9ZWEEN8Dc3aeyWWfs3PhwgWhPKfLly9rDxr603CegD1r+/bt
5ejRo6aXRlFJUrOFNdWzPPTzftNLoWLRzz//rBmMD3tkOUIs6ZjDkhle4B16
EszSaR4RpPPUHbWnyHkcMmRIgusj69Wr5/S7UCs5dOhQnaldunRp7UeGlxlX
rSR+niNHDp3Z3bp1axk+fLjW/WHmu+l9rDfywfbVEhQVLPVmVkrQ7VGHiuf5
jTfeiPM2qKtEPStu17FjR+OPkRBCPAX9Sv+X4xxl3356loQQ32LzZvt+qW3b
tkJ5RmfOnJFBgwZpBhmee+xjUTfz66+/ml4aRblEB47vUr+y1aK6ppdCxSNk
W2J/8rBvGZ7CUv8O9YamvUR311M2jX6cf09+30dELgo+jxPaw929e3epVauW
FC5cWHu0Y/MjHeCzvlChQlK7dm31znC9CrnEe/fuNb5f9SVazq6rny/T145P
0D7ccXwvX7483ttiDhFulzZtWr4mhJCAgX6l/wtZKHiNmzajX0kI8S1eqWHf
px06dEgo9wrzepFv5tjTZsiQQcaMGcO6VsovVe+df6un8PWpw6aXQj1C8C1R
b/lw/R/6ous/GSSTCpr3Fl3JhII2eS1zkKRx1FPabFpP2a9fv1h9yXHjxkmb
Nm20NzwyMlLSpEkjwcHBcfZwg/z582t95YABA2TOnDm6HzS9J/UHNuxYJ6FR
yaXYmGdk/4FHz8dBjax68OHhj+yhHzZsmPP1W7BggfHHSgghnoB+pf8LcxAK
FMgvQUE2OXnKvP9ACCEJ4dvvsE9LJuXKlRPKffriiy+kWbNmTi8AfX+zZ8+W
69evm14aRblNu459rH5lmyX1TS+FSqBOnDghvXv3dvbFOme7WDap9o8gGfe8
79Zboue7cy5LiqexJPm9OTrI8cT3n6PvOyoqSrODkReJGduYsxNXDzfyO9D7
jbngyKPEtaelS5dqviR+B9ejtmzZYnwf6m+0nlNfP1cmrx6ZoNtXrlxZXy/0
wj3qtsgpdby+mANv+rESQognoF8ZGMJ1OLzO/fuzxpIQ4ht07Gjfh61Zs0Yo
1wuZ/Zjd6tj/oF8Q/Wi3b982vTSK8ohqzy4vQVFB8tWpz00vhXoMXbp0SX23
vHnzPJizaEsmz6W0pP+zvjGbB3WhbbNb8q+0lqQMul8Lib5seI3PPfec+oqo
eY+rVhK1lJjTAr+rZ8+e2gO+bt062b8/7tq+Ll266O+WLVs23tuRx+PDTz7Q
2soXRueU/Qf2PfL2e/bscXrv6L1/1O1HjRrlfN2RIWr68RJCiCegXxkYunHj
hoSHZ5SwMCv6PI+zwgkh3s1vp5NF79FskitXTrlz545QrtHdu3dl/fr1UqZM
Gee+p0KFCnougFp8igok7fnhE62F6rumg+mlUIkQPrM+++wz6dGjh6S5l7fr
AP7fi08EyZu5LZlayDvqLpFH2TPSkprhluQOscSK4UHi/8flSaIeMiIiQj+r
W7ZsqfWW8+fPl23btiVq7wePEnN2HjXjhTwezWfX1s+TKWtGJ+j2b7/9tr4G
6N3/9NNPH3l7+NGOYwJ+venHSwghnoB+ZeAI+TZ4rSdMoF9JCPFuBgyw11Yi
V4tKum7duiWLFy/WzDJHHlqdOnVk3759ppdGUUb1/sGFOn+H8m3hWszBgwel
YcOGEhIS8lDdpU1yh1ryf/8IknbZLRmWzzMzxkfkt+k88xrhQfJs6P0+77jA
uvEZXbNmTa2BRP/vihUrtA7PHfu/9OnTqxcK79P0ftTXWfPxCp0J/q+xzyYo
txI0b95cX/dSpUol6Pb4znb415hNYPoxE0KIJ6BfGTi6ePGihIWlkowZLbl2
nX3hhBDv5PwFm6RKZUmmTOFaG04lXlevXtX+QNTmOPLQWrVqpfMrKIqi/FGo
u4TP57g+ExvIvMySwpLCYZZUzmBJ46yW9mZ3fcaS3pGWDMprqd84saBNsyXh
P8LjxH+Piv45/r1PHku6PWP/vf9E/36V6PspktqSJ0Msvf/45nCjh7tRo0Y6
6xu1chs2bHjkvBVXg/o+eF+ZMmWSjz/+2Pie1JepN6OS1lbOWj8lwb/z9NNP
6/GAuslH3RbHBmby4PbILzX9eAkhxFPQrwwsDR48WF/vadPMexKEEBIbw4bZ
nHlOVOJ07tw5zbdKly6dPpfIyELP5M8//2x6aRRFUR4Tasjr1q3r7LVGHiRy
GzFvO0WK5PHWOz6cjWlL4G0dNeyYh5MrVy6pWrWqzvZetGiR7Nixw/jeLybt
2rXT9WK2uKf9Un9h8Ufz1KusNOmfcuB/CXsO165d6zxWVq1a9cjbz50713n7
SZMmGX/MhBDiKehXBpbOnz8vqVKllPBw1lgSQrwP1FYiZzdDhvRy7do1oR5P
8CPhSzoy/OFXwreEf0lRFBWoQk15mzZtNCsQn41ZsmSRiRMnSteuXfW/MUcb
s7cxg6xYsWJa+5Y6dWqddRPXDG6t04z+98yZM2u9ZP369bUuALWd8ElN7/ES
AtaJx4vHgtnrptfja8Cf/PeEQupXLvko4X31ffr00ec8a9asCbp9yZIl9fbF
ixenr0wICSjoVwaekNON13ziROZYEkK8i0GDLNZWJkLYi6PPG/3eeP6yZcum
feDoB6coiqLsOnnypNMrenimDT4/Y5t5g5/B33zxxRelWbNmEhUVJe+8845s
3rzZ+D7OFWzcuFHnjMPLRc6x6fX4EgcO7JdCo56S/779ymP9nmPmXePGjR95
W8ecHXib2LfH/DfMTtq6davx54EQQtwF/crA04ULFyR16jBJm9aSi5wVTgjx
Ek6fQd+yPbeStZUJE2pjkMHv2GMjrw37TczXoSjq8XXn7h3TS6BcqNOnT8vO
nTu1n7ZXr15aP5k9e/Z46yWrV68uHTt2lLFjx8p7772nv296v+ZucH0L3yPw
xD755BPj6/ElPtmzPcEzdgBmgTvqfKdNmxbvbQcNGqReer58+WTTpk0P/BuO
T9T24n4KFCigHrrp54IQQlwN/crA1Pjx4/V1Ry2TaY+CEEJAt26cCZ4QYZYE
vrsrVKjg3GOjVmP9+vU6I5eiqMQJXmWZSc/KxC2DTS+Fegzdvn1bvv/+e51Z
g2y/tm3bakYl+rlj8yQxt6RSpUo6g3vUqFHyyiuvPFBnibzJJUuWGN+jeZqW
LVvqc/Dyyy8bX4s/g/pcx/G2ZcuWv/w7aianTJmic3VwPLZo0UJ27dr1wG3w
fY9rlcgeWLBggeYRhIWFqRdq+vERQogroV8ZmELtUpYsmSUkxJKTp8z7FISQ
wOb7YzYJCrJJ7ty5WBsYh7AnX758uRQuXNi510GtEGp/KIpKuuBXVpj6vIRG
BcvXpw6bXg71kC5fviyfffaZLFu2THMikTeJmnJHrdrD/d158+aV1157TQYO
HKh158j9Q49RbLpz5456P5jD47iPUqVK6exu03s1T7F3717n98uAAQOMr8ff
gJ+OehH03juOMXjD8M2bN2+u/x/PP/49JCREmjZtKmvWrIn1vnBdF6+X479x
7OL+4F2afpyEEOJK6FcGrvCdhte+VSvWWBJCzFKvnr22cvXq1UI9qOvXr8vs
2bMlR44czn04MtS++OIL00ujKL/T7h+26+yM2rPLyd0/Wa/saaF+/NSpU9qT
jM+9N998U30c9CnHViuZKlUqnUXy+uuvy7hx4+SDDz7QPN+bN28m+u+j5g31
l46/gV5c3Dfq3kzv29wN6vbwnCZPnlyvj5lejz+BWt6hQ4fGyogRI7Qnf+nS
pbo3j+lFJgTUVeLcgPWVhBB/g35l4ArXknEdz2ZLJp8dYo4lIcQMn35qz17E
LAPsFSm7UAc0ZswYyZAhgzNXDbNsjx8/bnppFOXX6rK8qXqW7/1vvuml+K3g
J8JXhL8ILxB+I3xHeGWx+ZLwK+Fbwr+Ejwk/E76mO78zsE/CzG/HfPCIiAit
1dy9e7fx/Zs7QU89siyR8xkI2Z3+wPTp09nHTwjxS+hXBrZwvmf3Cazocz7z
vgUhJLC4fceSIkUs3RsdPHhQKJFff/1V+vbt69y3I4MNmftnzpwxvTSKCgid
vvyrPD08jeQe+Xc5e+W06eX4tHDdBXWJixYt0h7junXrSp48eZweYEzQ1425
IQ0bNpQhQ4borBv0f6MP3KSOHj0q7du315pDrDN9+vTSrVs3v55L06RJE32s
NWvWNL4Wb2Ln3k+l16L2sm77auNrcYCcg4oVK/5lHg8hhPgD9CspXDvGMbBs
GWssCSGeZfZs+z61devWEuh6eE+MuZ+TJ082vlenqEDU4n2ztcay8/Imppfi
9cKcrxMnTsjWrVtl5syZmscH/yRjxoyx1koinw/zcDAXB59xGzdulGPHjmlG
rzcL15L69evnvJaUMmVKrQvFXsr0fs7V7NmzR/vg8TiHDRtmfD3eQru5jfVz
YdyqocbX4qB79+6aZ2l6HYQQ4g7oV1I//fST9hlmymTJpUv0LAkhnuH3363o
faule7/TpwO3hgn1Q5gb4ag3Qu3R/Pnz5Y8//jC9NIoKWGH2Tu3Z5dWb2Pbt
h6aX4xVClu5XX30lq1at0iw+5OhiLjFmgzzsSTr6iTETrFevXjJ37lztLfaH
z/qLFy9qDzvmjOOx4hpTvXr1NH/Z9L7Olaxdu1Y9Wby+mOdiej2mWfzRPAmK
CpZiY56RPfu8IxMA83vQv296HYQQ4i7oV1LQ6NGj9Th4803O3iGEeIbWre3+
HDLmA03IXNu2bZtUqVLFub8vXry47neRLUxRlHkd+/1bST84hRQcEyEXr8c+
V9of9fvvv2tGI66b9OnTR2rVqiU5c+aMtYcb17uLFCmi/cOYGQJfC7PArl27
ZvphuF03btzQurZcuXI5Z6HhMx2976b3d65i7Nix+thy584d0FmWu/ftlBdG
51S/cvFH842vB0yZMkUzrh3/vWvXLr2OYHpdhBDiSuhXUhDqePLmRZ6QTQ5+
xhpLQoh72bkzmc76Klq0aED5c3isqE0qVqyYc79ftWpV+fjjj00vjaKoWDRr
x3itseyx0r8yK/BZ9OOPP2rmHXwPZFGUK1dO0qZNG2sPN+Z+vfTSS9KpUyed
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
Y6lbN/qVhPg7HTrY6xjr1KnjcW8Qf2/lypW6t3Lss15++WX55JNPPLoOivIm
3bp1S44ePSoffvihTJw4Udq0aSNlypSRsLCwWHu4M2XKpF5/165d5a233pJt
27bJL7/8Qi/Jjdp6ZL28s2uK3P3Tf59jzHGfPXu2znhHfjAoXbq0zJgxQ37/
/Xetye3Zs6fpZVIxhGsZjnN4gDrqkSNH6mvlir3mrFmztD47c+bMsn27Gb9w
976d2hNuet9NCCHk8aBfSblKyMYpVKigHk9Tp5r3Uwgh7mH8ePueplixYtpP
6imhvguzRrGXcvSnon/10KFDHlsDRZnWpUuXNP9g6dKlOkcDOQj58uXT+qWH
PUn87LnnnpN69epJVFSULFmyRM/9Ll68aPphBKT6rumgPan913byS88SXiV8
L3w2t2/fXme+Y8YZ/HDU7DqOSxy7lPcJs7CaNm3qzFWBv9i3b199HZO638T1
E9xnpUqVjGdZEkII8R3oV1KuFGozsmTJHH2uY5NVq8z7KoQQ17J8OfKukklE
RDbtMfWE4M9MmDBB68HwfZU8eXKd63Hs2DGP/H2K8rTQR4vv048//lhrk7p1
6yZVqlRR/yC2WslUqVJpDVvr1q31vbJ+/XqdPYWaS8p7dPH6Bak+s4R6lvAu
79z1r9wK1FDieERGUGzCnHj8O2Y5Ud4rzMpC3bUjxzZNmjT6nYsa7MTuN/ft
2+fsiYAHanr/SwghxDegX0m5Wrg+i71TihSW7NrFmeGE+AuffGKT5Mltkjp1
mObZuVu//fabDBw40NnPis+V/v37e8wnpSh3C7Mvjhw5ojlyyIpEZiTq0NBD
+7AniazJbNmyafYkMiiRRYk+Trwf4soJpLxP8Cz/761S6ln2WNnarzzLggXt
PTY7duyI9d/hoYeHh3t4VVRihdrYwYMHq1+J1zUkJEQ9Z2ROJGbPuWHDhujz
h9QSHBzsrPV2B5t3bjK+vyaEEOIa6FdS7hBqQoKDg6LPSyz58ivzPgshJGkc
PmxJqlSWJE8erL1h7hRqbzp37uys7cD+dvz48exhpXxW58+f1/oizJuA547c
18jISGffZUxQPwzfp1GjRjJ06FBZvny5Zh54MnuBcq8u37gor779onqWHZc1
llt3bppekkuEuSo4ht9+++1Y/x3ZqA0bNvTwqqik6sqVKzJ16lTJmjWrM2ei
Vq1asmLFisfed+J+cO0F877ga7tyT4t8ytfn1NP31ftblxrfYxNCCEk69Csp
dwl7LJyTZM4cJD+dYJ0lIb7KDz/aJDzcUm9l1apV4i4dPnxYv4scHk6uXLm0
hoxziSlfELyYEydO6Mz6mTNnSpcuXTSrDX57bD3c8HbKlSunOX9TpkyRTZs2
yQ8//MDZ9gGiq39ckYZzq6q30nRhDbl+85rpJSVZOJ4dn92xXV+6efMmsyt9
WHj9cM0FmbiOmu8KFSrIvHnzHmvviTpy/D5qxV21n927f480equavp9eHF+A
c8AJIcRPoF9JuVPTp0/X4ysy0pLTZ+hZEuJr/Ppb9N4zpxVvzUxShRoL7Fsc
Pk7RokW1boO+DeWNgn/+9ddfy+rVq2X06NHSvHlznT2FXsnYeriffvpprUXq
06ePzJ8/X3bv3q1zkinqj1vXpdXi19RjQb3lhWvnTC8pSVq0aJHz2K9atar6
W5T/Cddm1q1bp5m5Mb+3UTuZkFk6e/bscWYHYGZYUveyO/d+KjWnltH3UdVJ
xWTHnk+M768JIYS4BvqVlLuFcxEcY0WKWHLhIj1LQnyFc+dt0XsK+8zh4cOH
iyuF/c4HH3wgpUqVcu53KlasKJs3b2YWH+UVOnv2rO6rFyxYoPMhXn31Va0b
i62HG9kFhQsX1nMpvFfgt6Ne+No136+Zo9yr23duS8+VbdRrKT+lgPxy4YTp
JSVa+Oxu1qyZ831Rt25depZ+LuTD1KhRQ6/NOGpr8Rm4d+/eePef8DvtWfcp
5P3330/0Pnbrrs1SfsLz+v6pO/0l2b0v6bPMCSGEeA/0Kyl3C+ev6IvDcVa2
bJBcuWqJaR+GEBI/V65Y8q9Sdq/yzTffFFcptn6y1157TWsyKMrTQg0v8lJx
LoTaoA4dOkj58uUlXbp0sfZwp0+fXvsfMSt32rRp+nuYpctaYCopuvvnXRm9
qb96LqUnRvr0DB7MkKpZs6bzPYPaYvyM8m99+eWXWmvuuJ6TKVMm6d27t/qZ
ce1BJ0yYoLfNmTNnvLeLiw8+XiWFRkXo+6bl7Lqyb3/8HikhhBDfg34l5Qmh
lsqRV1OpUpBcu07PkhBv5eo1S/79kn3P0apVK33/JlXI64e/48jrx3zQNm3a
yLfffpvk+6aoRwl1jqh3RB3PsGHDpHHjxlKoUCHnTKeYYL+NGqHatWtLv379
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
57zCDt1/rd+PlyxZIkOHDpUWLVqYvfgp91/3RtckBQcHS6tWrWTEiBGybNky
2bdvHzN1AXgUna+o/87p+zL6/pmuAf+zGXDwfD+c/d50lf+YVf2R11T+kRMn
Tsh7770n/v7+5ntlYGCgOadZ94/YvtcmhBDy10NfCU9x6dIl8368Pl/z53fJ
zp32eyFCMlp27777+tDXiZ5LmHIWob5+dI1e3rx53XOeu3fvLkeOHBE8eXru
lt5Pbdu2TWbNmiW9evWS+vXrS758+VJdK5k9e3az1qhz584yefJkWb9+vZm7
e/v2bdu/FQAeZuSG96RZyHPy7al9th/KffSsXT2jYty4cffN3kHmdvTc4T88
p/Jx6HkCo0ePlpw5c7qvdfQcZ92nYPuemxBCyKOHvhKeRPc16mxbl8spTqfj
zjXJ3X2vtjsiQmxHXwdjx/qY14W+PvT8eX29nDlzRoYMGeLeQ6z/1f/XjyPt
6frVAwcOyMqVK+XDDz+U119/XapUqeJe83Fv9NytwoULywsvvGD2r+m6V71n
5+8GQFqavn2MWdPmP8xXBq7qKuevnbX9kIAnSs9I1fcG9Xtsyl6SJk2ayOef
f2793psQQsjDh74Snkj3ERUu/JR57v79eaecPGW/LyLEVk6ddki9enfXVD71
VCEzc1XXTer6SV1boB/XdZWTJk1i33AaOXfunDnX/9NPPzVzjF555RWzx17v
iX7fS+rfgc4w1e+zo0aNMueGfvPNN+Z+CgDSQ/SxXVJ3egXTWxYd/e8yb/c0
uZXIzC2kPV07GXV0h9xMuG77oZg9CXpuSrly5dzvE9aqVcvMqrN9D04IIeTP
Q18JT6X7XF999VXz/A0KcsrKlfZ7I0LSO6tXO8zzX18HLVu2NGfMv/baa+7e
TDs0Xben6/7waPRMtWPHjpnvk9OnT5du3brJs88+695n9vvox/XHu3btaj5f
f57+fOasA8gIbifelsV75kiJMblNb1l9cgnZ8O0KZnIhzWw/tEn+Pq2ceX6t
+nqZ7Yfjps/xTZs2me/RKd+ztcPU81b03FTb9+OEEEJSD30lPJlef8ybN8/M
P9bncadOTrlyhVk8JPPn6lWndOlyt5PU53+fPn3MfO+U63Cd+63r+OjK/pyu
c9T1jvrnpesf9fuhrodMWZt6b7QH1g5Y11PqukpdX6nrLHW9JQB4gkvXL8qY
jQMkaISf6ZVemP1/JfJIuO2HBQ/29YkYaTW/vvvcgcGru8vVGxlzP4fuQdHz
vXWtpX5fL1KkiJlfp9/Lbd+XE0IIuT/0lcgMDh06JM8884x5Lhct6pSISDpL
knkTFeWUvxV3/vp8L+re56SpV6+ebN26lfUyqdBzIfV8SF1vqudF6rmRerZV
yj3LvdHzJvXcST1/Us+h1PMo9VxK1qkCyCxOXDgqvZa3F9cwl+mZ/nt+Y/np
/FHbDwse5Pu4/dJxSQvz/NF0XNzczAD3BLGxsdKpUyfx9fU13/dz585t3vvd
sWOH9ftzQgghd0NficwiISFBhg8fbtY/6cyRQYOdcuOG/W6JkLTKzZsOGTLk
7vNbO7agoCD3eUx6NoL+m+7t9Kyqw4cPm3naus9L52vrnG2dt53aHm6dz61z
unVet57Nr/O7dY63zvMGAG/w3emvpf3Cl0zfNGnr+7YfDjxAbNy30nVZG3fX
3XLu3+WfxyP+0tdavny5tGjRQgoUKHBfdJ9I+/btZezYsbJixQr59ttvzbV+
Wjt58qT069dPsmXL5p5LqNcOmzdvtn6fTggh3h76SmQ2OounRIni5nldpoxL
ovYwP5x4fqJjHOb5nLInWf+rawLeeusts77Y21y5ckX27dtnztHXfVytWrWS
4OBg9zqJe+NyuaRUqVLmfmjo0KGyZMkSiYmJMWfgAgDuOnw2NkPMSEHG9d3p
fdJpSUt3T/nKnNqy68dtj/11dU+IzgXU79lt2rSRa9euyfXr1831jb7/qL2l
XvvofpLvvvvusX+91Fy4cMF0o7ly5TKPI0uWLNK6dWtZs2aN9ft1Qgjx1tBX
IjPS8+h69+5t1p3pWrR33uFcS+KZ0XMq337beee5fP9e5f79+8upU6ckM9P7
F/09bt++XebMmSPvvvuuNGzY0Ky7SG2tpK6JqF69unTs2FEmTpwoa9eulYMH
Dz6R9RgA4E0SEm9JUjLrzr2ZzmsqPCqH6SmbhTwnuw6n3dkzuqchZX3jZ599
lurnrFu3zlzX6+ft3bs3TX7d1Og9xOzZs825linvETdp0sQ8Ltv37YQQ4m2h
r0RmFhERIaVLlzLP8fz5nbJihc+dayv7HRQhD5NPPtHrcqe7jwsMDDRnKWa2
dYE3b94050itXr1axo8fL2+88YZUrVrVfe9yb/RepVChQma2kJ4zFRISYs6a
iouL48xOAHgCEpMS5ZlJf5OaU/6PmS8ef+ua7YcEC/R77NpvQiX66M40/9p6
PnTK9/izZ88+8PN0n7Z+XrFixZ74e5F6vkxoaKiZv5dyDaLny3zyySfW798J
IcRbQl+JzE67kDFjxoifXxbzXK9f3yUHvrffRRHyoKxZ6yN5893fU06fPt28
5+/JtGeNjo6WxYsXy5AhQ8x8zpIlS7r3t98b3YdVtmxZsxdr5MiR5p7hq6++
kqtXr9r+bQCA15mweZjkeT+rWVtXdPS/y+gN/eXYuR9tPyxkElOmTDHf+6tV
q/aHn6d7JlKuE8LCwtLlsWlPq/fLzz//vPvX1vNnJk2aZK5pbN/LE0JIZg59
JbzF0aNH5eWXX/51b8fdPeLnztvvpghJycZNDilS5LfuTtcX6jW8vsfvKXRP
1/Hjx2XLli0yY8YM6dGjh9StW1fy5MmT6h7uHDlySO3ataVLly7y0UcfycaN
G+XHH3+UxMRE278VAMA9zl87Kx+Hfyhlxxc0vaWeYfj/FjSRTd+tNPvF4bl0
De32Q5vMrO/W8xrKtZvp+95gShc4atSoP/1c3WORcs5letN+Us/C1nWg+hgK
Fy5sztCOjIy0fk9PCCGZMfSV8DabNm2Sp58uaZ732bM7ZcoUH+aIE2tJSnbI
6tUOKVL0t57Sz8/PzLrPyPub9Rx8ndWpMzt1/XK7du2kUqVK5rGntoe7aNGi
8tJLL5lzN+fPny+7d+/+wz1fAICMSbvJDd+ukFfn1TW9pabMh/lk7MaBcujn
720/PDyC4+eOyJStI6XS+MLuv0udFa9nVaaXS5cumbl4er2g96Z/pkqVKr/O
1CyTDo8udbrOU/emp8z4y507tzk3Pzw83Pq9PSGEZKbQV8Ib3bp1Sz7++GPJ
kSP7r++POmXJEockJjFLnKRPEhJ8ZOlShxQs+FtPqdfrvXr1MmcYZBS//PKL
6Ra1Y9SuUTtH7R5T28OtXaV2ltpdaoepXaZ2mp6+jx0AkLoffzloesqnx/4v
d9/Va3n7DP1+m7e7EH9OlkaHSNNPnnX/nekcneFr35HvTn+d7o/niy++MNcQ
Opf7YfZWlC9f3ny+zsOxTWcCDhgwwH3ets7905l/en9t+x6fEEIyQ+gr4c30
PL2BAwe6z7YsG+wya92YyUOeVK7FO2XmTH0v/re+T7u/Dh06yPnz58UGvT84
cuSIWXs8depUefvtt6VOnToSFBSU6h5uXUege7e6d+9uev/NmzfLsWPH2MMN
AF5K11xuPrBaOi5uLu+t6GT2FyPjuHLjkqz8aqm8vuhl+bfhfqaj9B/mK20X
/MPM0LmRYO99xU6dOplrC5219zAKFCjwUGddpie9nxg3bpy5Pko5g/vVV1+V
VatWWb/XJ4QQTw59JSBy8uRJc35eypqxypWdsmEDvSVJu5y/4JAxYxwSEOC4
b590q1atzHmP6UFn1ejMGp1dozNs9OyncuXKmevq33eS+lrQWTg6E2fw4MGy
aNEi2bNnj1y4cCFdHisAIPM5c/mUxF0+aftheJWk5CRpNKOKey3lP2ZVl/kR
H8vPl0/bfmjmzOuU862XL1/+p59/+fJl99mRXbt2TYdH+Gj0rBydH677UFKu
pRo1aiRLly61fs9PCCGeGPpK4Dc//PCD2cua0ltWqeKUtWt9zBmDtvsu4pk5
edIp/fo5xc/PcV8fqD1gbGyspDXdgxcXFyc7duyQkJAQ6dOnjzRu3NicT59y
jX9vdA9T1apVzbqG8ePHy+rVq83jykh70gEAmUO5cU+Zzqz+x/8lk7eMkL3H
I9P1rERvpNcFC6NmyuwdE815lRnJ3r173b3ew+wx0Zl8Kdcva9asSYdH+Nfo
fhPtXytWrOh+vDVq1JA5c+ZYv/cnhBBPCn0l8K+0r9HXREpvWb686851h8+d
a2rOtyQPl4OHfKRTJ+ed59D9c2eaN29uznR8XAkJCXLo0CFZt26dTJo0yZyX
VL16dXN2Ump7uPPnzy8NGjSQd99911wvb9++3Zy7xBljAID08mXsBjPPJdcI
P/d6v6Kj/106L31VFu2ZZeb18H3p4Wn/+Pk/F5gzQ7fGrrP9cB7Z6NGjzTVK
rVq1Hurz9b1V/XzdE65n0Wd0+lzWM3Pq1q3rvh4LDg6WCRMmmFnjtnsAQgjJ
6KGvBB5Me0s9VzClt/xbcafMnetgnjh5YKJjHNK0mUscjvt7ytdee00OHDgg
j0rnZuq/1bqXaNiwYdKyZUspXbq0e5bmvdE5lTovU89M0vnin332mVm7oPun
AADIKK7dvCpfHtwo76/rLTUml3R3lymzxrste830l9dvMa8tha5D/fb0V+bP
pWdoO6kw/j/u+3ObsX2c7Yf4yHR/h16/6NmPf+ann35yn1/z6aefpsOjS1t6
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
Thk40Glmjp87b78LzIi5eMlHNm1yyJAhTqlVy3Xnz9BxTwesH6tl1rbqmT+3
bt16rL8vAAAA2BEfH3/n+tgly5Yts/1QrNJ5j/ree4kSJdzXuw0aNJBFixZZ
7xoIIeRxQl8JZFzXrl0z7xnrHmXt2fSaLKV7czh8pGywU95+23nnGsUhe/f5
yM2b9vvC9MytWz7y9dc+Mn++j5njXb68y6xLvbefrFatmtkzo//WXblyJY3+
ZgAAAGDLxYsXTU+pPZ3uU4qNjbX9kKzTs4xWrFghVapUcV8LV61aVWbOnCkx
MTHWewdCCHnU0FcCnkPfR9YztceMGSONGjUSf/+s952/qGswS5VySosWTrO+
cPFih+yJdsr5C/a7xcfJpcs+EvNPhyxd6pDhw53y6qtOKVPGed/aSY2fn5/U
q1dPRo4caXpe+kkAAAB4k+TkZPnyyy+lYcOG7mvkUqVKybhx48w+Ltv9AyGE
PGzoKwHPpfvHDxw4IEuXLpW+ffuaPeQBAdnu6/BSkiOHU6pUudv19e/vlFmz
fGTDBocc+N4hiUl2z8ZMSnZI7MG7+7h1VrfueW/d2mXO78yZ05nq70e72tq1
a0vv3r3Nfpf9+/dLQkJCOvypAwAAABmfzvhs06aN2XOk18+FChWSIUOGmHOR
bPcQhBDyZ6GvBDIXnT+uM3x27twp8+fPl0GDBpmzt4ODgyVLFt9Uuz/dQx0Q
4JR8+ZxSooRTKla8e/Zjw0Yus1azXXundO3qlL59nWZ94/jxDpkxw2H2YYeG
+ph55suX+8iCBT7m4xMmOGTEiLuf362bU9q/fnfNZ+PGLqld++7X19nc+fM7
za977wyce+Pr62veD27atKkMGDDA7PnR9aUnTpwwv08AAAAAf+zHH3+8c03e
zexF0mvsoKAg6dmzp2zfvt16H0EIIQ8KfSXgPfRcm9OnT5u9IGFhYTJp0iTp
1auXNGvWzJx1kydPbnE4Uu8On0Ry5coplSpVMn1kjx49ZMKECRIaGiqRkZFy
8uRJ83gBAAAAPL4zZ86Y9ZWBgYG/7lfylw4dOsjGjRut9xKEEPL70FcCuJeu
W9RzMi9cuCBxcXFy9OhR+f77781+koiICHMu5Pr168153kuWLJGQkBCZMWOG
+e/ixYtND6o/rp+ne0305+nPP3LkiOlK9evq16eLBAAAANLf5cuXZfLkyZIv
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
AAAAAAAAAAAAAAAAAB7l/wNqeCVv
     "], {{0, 676}, {1324, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{458.3926696777344, Automatic},
   ImageSizeRaw->{1324, 676},
   PlotRange->{{0, 1324}, {0, 676}}]}]], "Output",
 CellChangeTimes->{3.877480930597762*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f6cd3ab6-35f2-4d95-a9a2-e67b654fbc20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"define", " ", "\[Alpha]"}], " ", "=", 
  RowBox[{"angle", " ", "beween", " ", 
   OverscriptBox["r", "\[RightVector]"], " ", 
   RowBox[{"(", 
    RowBox[{
    "vector", " ", "from", " ", "earth", " ", "center", " ", "to", " ", 
     "satllite"}], ")"}], " ", "and", " ", "OA2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "then", " ", "from", " ", "trig", " ", "relations", " ", "we", " ", "have",
     " ", 
    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], "=", 
   RowBox[{
    RowBox[{"y", "/", "r"}], "=", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}], ",", " ", 
  RowBox[{"where", " ", "\[Theta]"}], ",", 
  RowBox[{
   RowBox[{
   "\[Phi]", " ", "are", " ", "defined", " ", "in", " ", "the", " ", "coord", 
    " ", "system", " ", "where", " ", "the", " ", "ecliptic", " ", "plane", 
    " ", "as", " ", "the", " ", "x"}], "-", 
   RowBox[{"y", " ", "plane", " ", 
    RowBox[{"(", 
     RowBox[{"see", " ", "left", " ", "graph", " ", "above"}], ")"}]}]}], ",",
   " ", 
  RowBox[{"and", " ", "OA2", " ", "as", " ", "y", " ", 
   RowBox[{"axis", ".", "\[IndentingNewLine]", "On"}], " ", "the", " ", 
   "other", " ", "hand"}], ",", " ", 
  RowBox[{"define", " ", 
   StyleBox[
    SubscriptBox["\[Alpha]", "c"],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["to",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["be",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["the",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["point",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["of",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["intersection",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["beween",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["sattle",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["orbit",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["and",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["earth",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["shadow",
    FontColor->RGBColor[1, 0, 0]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "\"\<U\>\"", " ", "to", " ", "be", " ", "the", " ", "open", " ", "angle", 
   " ", "of", " ", "Umbra", " ", "cone", " ", 
   RowBox[{"(", 
    RowBox[{
    "darkest", " ", "color", " ", "in", " ", "the", " ", "right", " ", 
     "graph", " ", "above"}], ")"}]}], ","}]}], "Text",
 CellChangeTimes->{{3.876784581646731*^9, 3.8767846900907593`*^9}, {
   3.876784720551485*^9, 3.876784739796015*^9}, {3.876784822829365*^9, 
   3.876784849093647*^9}, {3.876784881135674*^9, 3.876784946362941*^9}, {
   3.876785020409274*^9, 3.876785065203823*^9}, 3.876785124500836*^9, {
   3.8767857692602997`*^9, 3.876785769976575*^9}, 3.8768706802884808`*^9, {
   3.876871862477839*^9, 3.876871941325416*^9}, {3.876871976912573*^9, 
   3.876872116091135*^9}, 
   3.876872947874548*^9},ExpressionUUID->"37bbd3ed-2721-432c-83ab-\
93746a728842"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A2B2", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"r", "^", "2"}], "+", 
     RowBox[{"OA2", "^", "2"}], "-", 
     RowBox[{"2", "*", "r", "*", "OA2", "*", "Cos\[Alpha]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CosU", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"OA2", "^", "2"}], "+", 
      RowBox[{"A2B2", "^", "2"}], "-", 
      RowBox[{"r", "^", "2"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "A2B2", "*", "OA2"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "U", "]"}], "\[Equal]", "CosU"}], ",", 
    "Cos\[Alpha]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Cos\[Alpha]c1", ",", "Cos\[Alpha]c2"}], "}"}], "=", 
   RowBox[{"Cos\[Alpha]", "/.", 
    RowBox[{"FullSimplify", "[", "%", "]"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Obtained", " ", "\[Alpha]c", " ", "as", " ", "functions", " ", "of", " ",
      "angle", " ", "U"}], ",", " ", "OA2", ",", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "sattlite", " ", "radial", " ", "distance", " ", "r"}], "=", 
     
     RowBox[{"R", "+", "L"}]}]}], "*)"}], "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.876785142312632*^9, 3.8767853761162777`*^9}, {
  3.8767854242938232`*^9, 3.87678543288988*^9}, {3.876785465079123*^9, 
  3.876785466539781*^9}, {3.8768721906302443`*^9, 3.876872209678462*^9}, {
  3.876872255408842*^9, 3.876872392795768*^9}, {3.919039277460454*^9, 
  3.919039280637792*^9}},ExpressionUUID->"79f7d1f1-76df-424d-a13e-\
bb4c11c0cbd3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"km", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subPara", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Rearth", "\[Rule]", 
      RowBox[{"6400", "km"}]}], ",", " ", 
     RowBox[{"Rsun", "->", 
      RowBox[{"696340", "km"}]}], ",", 
     RowBox[{"OP", "->", 
      RowBox[{"1.48", "*", 
       RowBox[{"10", "^", "8"}], " ", "km"}]}], ",", 
     RowBox[{"r", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "+", "6400"}], ")"}], "km"}]}], ",", 
     RowBox[{"rp", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"L", "+", "6400"}], ")"}], "km"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", "=", 
   RowBox[{"ArcSin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"Rsun", "-", "Rearth"}], ")"}], "/", "OP"}], "/.", "subPara"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rad2degree", "[", "U", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OA2", "=", 
   RowBox[{
    RowBox[{"Rearth", "/", 
     RowBox[{"Sin", "[", "U", "]"}]}], "/.", "subPara"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.876872207636792*^9, 3.8768723034400043`*^9, {3.8768724033996677`*^9, 
   3.876872484478218*^9}, 3.876872536750187*^9, {3.876873571075304*^9, 
   3.87687359464167*^9}, {3.8769575589478197`*^9, 3.876957561923765*^9}, {
   3.876957799227775*^9, 3.876957800635833*^9}, {3.876972269870735*^9, 
   3.876972271479396*^9}, {3.8769767821024647`*^9, 3.8769767830816393`*^9}, {
   3.877051113398301*^9, 3.877051117256613*^9}, {3.877054249013502*^9, 
   3.877054249822255*^9}, {3.87757287838778*^9, 3.877572880413*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"9d274728-81e0-452c-8137-fe32a7dce534"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]c", "[", "Lv_", "]"}], ":=", 
  RowBox[{"ArcCos", "[", 
   RowBox[{
    RowBox[{"Cos\[Alpha]c2", "/.", "subPara"}], "/.", 
    RowBox[{"L", "->", "Lv"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8768725003061*^9, 3.87687254520288*^9}, {
  3.876976800047317*^9, 3.8769768256390247`*^9}, {3.9190392461060877`*^9, 
  3.919039246469494*^9}},ExpressionUUID->"623708f4-5cb6-4b11-bf4e-\
ccf09d9747f1"],

Cell["\<\
Thus we obtain value of \[Alpha]c=65.8374 dgree for a sattelite of \
height=600km\
\>", "Text",
 CellChangeTimes->{{3.8768725483683853`*^9, 3.876872563050582*^9}, {
  3.8768736181525383`*^9, 
  3.8768736335486917`*^9}},ExpressionUUID->"4aab804c-6730-41a1-8fba-\
9a8b491b4767"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]t", "[", 
   RowBox[{"\[Theta]isat_", ",", "t_", ",", "\[Psi]v_"}], "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ArcCos", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]t", "[", 
       RowBox[{"\[Theta]isat", ",", "t", ",", "\[Psi]v"}], "]"}], "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Phi]t", "[", 
       RowBox[{"\[Theta]isat", ",", "t", ",", "\[Psi]v"}], "]"}], "]"}]}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.876786905224162*^9, 3.876786954112843*^9}, {
  3.87678916382104*^9, 3.876789172469146*^9}, {3.876872610308429*^9, 
  3.876872616190199*^9}, {3.87696971980472*^9, 3.876969731095079*^9}, {
  3.8770494905811367`*^9, 3.877049497961443*^9}, {3.877050897128683*^9, 
  3.877050900587295*^9}, {3.877050937347027*^9, 3.8770509374696903`*^9}, {
  3.877572600636639*^9, 3.8775726026149893`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"7e88ebf6-6c5d-4453-bb48-f7a735d2ee1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PhiSelect", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "<", "0"}], ",", 
    RowBox[{"x", "+", "360"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", ">=", "360"}], ",", 
      RowBox[{"x", "-", "360"}], ",", "x"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.876971772624978*^9, 3.876971821121307*^9}, {
  3.877051224758195*^9, 3.877051264476548*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"1d7c8bb4-df15-4c73-b4c3-9d398e5c93cc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example: Suzaku satellite (low inclination angle)", "Section",
 CellChangeTimes->{{3.8770551530097923`*^9, 3.8770551900396137`*^9}, {
  3.919039339056346*^9, 
  3.919039362558342*^9}},ExpressionUUID->"78682cb5-2965-4792-af29-\
c1d38db8bbc6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"L", "=", "600"}], ";", 
  RowBox[{"\[Theta]isat", "=", 
   RowBox[{"DegToRad", "[", "31.38", "]"}]}], ";", 
  RowBox[{"\[Psi]v", "=", 
   RowBox[{"DegToRad", "[", "79.725", "]"}]}], ";", 
  RowBox[{"Ti", "=", 
   RowBox[{"0", "T"}]}], ";", 
  RowBox[{"Tf", "=", 
   RowBox[{"Ti", "+", 
    RowBox[{"3", "T"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ts", "=", "96"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rad2degree", "[", 
        RowBox[{
         RowBox[{"Pi", "/", "2"}], "-", 
         RowBox[{"\[Theta]Et", "[", 
          RowBox[{"\[Theta]isat", ",", "t", ",", "\[Psi]v"}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"PhiSelect", "[", 
        RowBox[{"Rad2degree", "[", 
         RowBox[{"\[Phi]Et", "[", 
          RowBox[{"\[Theta]isat", ",", "t", ",", "\[Psi]v"}], "]"}], "]"}], 
        "]"}], ",", 
       RowBox[{"Rad2degree", "[", 
        RowBox[{
         RowBox[{"\[Alpha]t", "[", 
          RowBox[{"\[Theta]isat", ",", "t", ",", "\[Psi]v"}], "]"}], "/.", 
         "subPara"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "Ti", ",", "Tf"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Latitude\>\"", ",", "\"\<Longitude\>\"", ",", 
        "\"\<\[Alpha]\>\""}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Rad2degree", "[", 
      RowBox[{"\[Alpha]c", "[", "L", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "Ti", ",", "Tf"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Cyan", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<\[Alpha]c\>\"", "}"}]}]}], "]"}], ",", 
   RowBox[{"ToExpression", "[", "FrameFormat", "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t / T\>\"", ",", "\"\<Angle\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Suzuku (L=600km, \!\(\*SubscriptBox[\(\[Theta]\), \(isat\)]\)=31.4, \
\[Psi]=79.7),Winter solstice\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.876969919736464*^9, 3.876970013545968*^9}, {
   3.876970048950528*^9, 3.876970050072877*^9}, 3.876970300582251*^9, {
   3.876970429725074*^9, 3.876970433319837*^9}, {3.8769706434651337`*^9, 
   3.876970645058642*^9}, 3.8769708311039057`*^9, {3.8769709309332533`*^9, 
   3.8769709372344923`*^9}, {3.876971125947016*^9, 3.87697112673131*^9}, 
   3.8769715116749687`*^9, {3.876971829205666*^9, 3.876971831341813*^9}, {
   3.876971917734632*^9, 3.876971917894937*^9}, {3.8769719762271976`*^9, 
   3.876972096822691*^9}, {3.876976853903967*^9, 3.876976875422583*^9}, {
   3.8769769448429613`*^9, 3.87697694543233*^9}, {3.877050950093383*^9, 
   3.877050959888925*^9}, {3.87705114083895*^9, 3.877051201937044*^9}, {
   3.8770514203583593`*^9, 3.877051446688602*^9}, {3.877051521128131*^9, 
   3.877051526491809*^9}, {3.877051579708128*^9, 3.8770515884121923`*^9}, {
   3.8770542588542547`*^9, 3.87705433959546*^9}, {3.877054473858056*^9, 
   3.877054475741426*^9}, {3.87705452366084*^9, 3.877054524142782*^9}, {
   3.877054557057597*^9, 3.8770545588490868`*^9}, {3.877054614330228*^9, 
   3.877054615456607*^9}, {3.8770546474881277`*^9, 3.877054691743248*^9}, {
   3.877055496423448*^9, 3.877055524190467*^9}, {3.877056126277635*^9, 
   3.877056127795726*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"078a93f9-fbfa-4f6c-b15b-0d0e383a9000"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1: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
MlNkx+CNjYb3AU0WXineKKO0YgzS793tLKGz8LZi95S+3hiwra8KRT4wx9we
2Teb7cYA4p0ePx4ww28BZ6m42DH48WVWZ2yDKfIQsuRO/BjwByjvStY0RUWR
6ekXl8fgnhwfgyliin4PD+X/TB6DRzXvnBXqTXCi19PE4OEYyAc60WLtTVDc
20zva/UYtEu3njy33hjXOv5VUhUZhygeppGnuCE+NXWZ//7iONwr73fLlNFB
xeHo5MuJ4/BtetuZuC5tTHzwRn3n9XF4YJ1w9PxVbTwiu2w9b+o4xP9yu905
oYXUTFfEqsfj8Ova0APOS038QAJ5CmrG4YMPq3Kbtjp2WMePvBD6B3nyeU3H
J5VQ0qms+f7Zf6BvGvqpdKMkQhvPxeLACdBdcujO0fWLiOjJYfm6IxOQMlje
IcOUJG2yHdnfjk9Azlut6UtFkiTcsax8InwCbgcdFaKbSP//+9AEFGa9ulja
KE0qy+N4tBMnwC//rn6ugixxeiQTcOP5BEwm/fNcdHgZ2XvcwDZwfAI+LxFs
vKuqTK5L+s5XPjIJKkEBUalhOuSlnN2GgWOTEGX89KBNhg5pUjA59+LkJLAb
hR2/VesQaW0BhnXkJByOWfn0lowuuWJ9f3r3lUkYf+Nh//CpLrl8pOd3Zu4k
6D1q/3KrVY+cb/Gt1ByaBN+4k3cDFxmSnJ92AuOjk9D2X9K6F8aGpLrLZE3B
xCQIBdWU1rgYEuERgWIbnimoP9DQfDrFkMQIZb46IDIFHx15bP4oGJEoVu/9
J5pTIJfmdzREyZicvrkn0tBvCv5evGz/m2lKLLb59Nvsn4Io9YZHz5RMCa+0
92bfQ1OgU+a4gFptSsIvusneCJkC+yaFqSthpiQi3PYRT8wU3Oo7U7px3JSc
8zP88iFrCtwXffy9o9GMrFfRY3U+mgKF+gdjEoNmRLBDK3X22RTcTBuvOSVo
TqLdV/rrvpmCJhVP3WjKnMTayc5dqZqCyZ2tKeu49/l4I5rKjj9TUKmuvVXR
k0XsRmZijg1NQclpEbALYhGxx1ODl8emuP2TaKkTwyKXVEdfl81MwXw5w4VC
L1gkQa7bRnMBB9aJT80uE2ATh+b2Z2vEOSCu5D3XJssmEld+SntJckDUc0bU
SZtNLou0tF2S58D6+JOjmxzZ5Aq9OnhCiwNyOas/haSwiVNhxVcxfQ7EPri0
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
+N//zQr+D8wXk0Y=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$5556#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          
          LineBox[{{6.122448979591837*^-8, 79.72501881696368}, {
           0.0009201537616788803, 80.00780435311873}, {0.0018402462988679647`,
            80.29059501469327}, {0.0036804313732461333`, 80.85621221364707}, {
           0.007360801522002471, 81.98773359007329}, {0.014721541819515146`, 
           84.25307138751342}, {0.029443022414540495`, 88.80208211689236}, {
           0.03234345654340338, 89.70260368285543}}], 
          LineBox[{{0.03425672184952582, 90.2975956660937}, {
           0.12272507125637595`, 119.40643445123715`}, {0.1823336507104563, 
           141.7858036918475}, {0.24077294645662814`, 165.83577668362233`}, {
           0.2734810580458322, 179.5999569868444}}], 
          
          LineBox[{{0.2753943233519547, 180.39977504219036`}, {
           0.36332736029463414`, 215.03799120483143`}, {0.4274424783864683, 
           237.009743493011}, {0.490388312770394, 256.7699344592597}, {
           0.5323434565434032, 269.70260368285534`}}], 
          LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAVWGAjaEY4T/bVKzzwuRwQMH6gEzU
m+M/cnkaia1+ckBov8jIvoLlP0SWnuvi3HNA+TkQIjSK5T+Cs5ptkeJzQIq0
V3upkeU/0yKFS0Loc0CrqeYtlKDlP3mXhg+r83NA7pMEk2m+5T+B3l1gmAp0
QHRoQF0U+uU/w0ijA984dECAEbjxaXHmP84JWBD9lnRAEYz/St945j/6X+c2
75x0QKIGR6RUgOY/2Sg0I+OidEDD+9VWP4/mP034kTLQrnRABubzuxSt5j8q
bzltvsZ0QIy6L4a/6OY/gACvAuX2dECZY6caFWDnP153cUQjWHVAbEsYwixo
5z+y6fJ5xF51QD4ziWlEcOc/7HbklWZldUDiAmu4c4DnP5wknlGtcnVALKIu
VtKg5z+f8WKIQ411QL7gtZGP4ec/N3V8RYjCdUCQyCY5p+nnP49AjjMyyXVA
YrCX4L7x5z9dfy5E3M91QAeAeS/uAeg/6toPmzDddUBQHz3NTCLoP0YX4MDY
93VA413ECApj6D+syV0BHC12QLZFNbAha+g/p0O2PsIzdkCILaZXOXPoP7hx
5NdnOnZALP2HpmiD6D86PEPtsEd2QP7k+E2Ai+g/N8tZUVROdkDRzGn1l5Po
P53fE+H2VHZAdpxLRMej6D8NMvdTOWJ2QEiEvOveq+g/nnqRH9lodkAabC2T
9rPoP40xs+d3b3ZA7FOeOg686D+wsMegFXZ2QAc8DFlbwOg/Dlh/bJl5dkBa
axkw
           "]], 
          LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAS5+JwQfQ6D+evv0O6pXZP2QL8TBV
1Og/LY79av7P4z8282HYbNzoP8G4GAoKgfA/CNvSf4Tk6D9ohD1EzRj3P9rC
Qyec7Og/usmD3z2v/T+sqrTOs/ToP7LaMXkoIgJAUXqWHeME6T8YG+exGbUI
QJoZWrtBJek/Psx/hfDoEkAtWOH2/mXpP06XUptM8R9AnBI//ott6T/8nhCA
P7ogQArNnAUZdek/mh7+g6F7IUDoQVgUM4TpP6H9vXa8/SJApCvPMWei6T9C
sPUNNv8lQBr/vGzP3uk/qzQ9XoT2K0AGppjin1fqP+vQ4DDd2DNA3vNPzkBJ
6z+onGPhaiA/QPLfGTAWVe0/JmmbBfa8SkCQq3pnV1fvP8vMTWPRWFJAF3+B
knqE8D+0+m9192xWQO5ZnIQ=
           "]], 
          
          LineBox[{{1.0342567218495289`, 90.29759566609465}, {
           1.1014544200216227`, 112.02906478918808`}, {1.1607218070879428`, 
           133.37504307815516`}, {1.2249423594259463`, 159.1908929045805}, {
           1.2734810580458324`, 179.59995698684452`}}], 
          
          LineBox[{{1.275394323351955, 180.39977504219038`}, {
           1.346814388488432, 208.92935973864925`}, {1.410588314192506, 
           231.47236092509095`}, {1.4701317316988756`, 250.51599358707114`}, {
           1.5285058654973367`, 268.51146975655536`}, {1.532343456543403, 
           269.70260368285534`}}], 
          LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAqjDAxlCM+D/bVKzzwuRwQIKeaYc1
avo/pVnKTcpac0BCW2bsTm76P0dElUzKYHNAAxhjUWhy+j9rUd9PzWZzQISR
XBubevo/Oq/0Ydxyc0CGhE+vAIv6P/+Z+50ei3NAiWo118ur+j9bOWhEMrxz
QJA2ASdi7fo/QFg+X4QgdEBQ8/2Le/H6P2qKLQbhJnRAEbD68JT1+j+240dU
QC10QJIp9LrH/fo/fiYRzwY6dECTHOdOLQ77P8+t0JSyU3RAlgLNdvgu+z8x
P85/f4d0QJ3OmMaOcPs/EFFPDLfwdEAcuUADlXT7P4OZrUY793RAnKPoP5t4
+z8jflgRwf10QJt4OLmngPs/xpPbLtEKdUCZItirwJD7P0yuH2cCJXVAlXYX
kfKw+z+oFyNYn1l1QBRhv834tPs/EgqSmDdgdUCUS2cK/7j7P52WZ7rQZnVA
kyC3gwvB+z8TPoFzBXR1QJHKVnYk0fs/7mx0cHeOdUCNHpZbVvH7P718qhFz
w3VADAk+mFz1+z/Xfz/QE8p1QIzz5dRi+fs/yvdgr7TQdUCLyDVObwH8PzwK
DJ723XVAiXLVQIgR/D+IcTHkefh1QAhdfX2OFfw/6cByThr/dUCIRyW6lBn8
P3iG03a6BXZAhxx1M6Eh/D9MnPrQ+RJ2QIXGFCa6Mfw/q0CxVXMtdkAEsbxi
wDX8P4pdoVsQNHZAhJtkn8Y5/D+NLJ6+rDp2QINwtBjTQfw/0nUJbONHdkAC
W1xV2UX8P+ROwp59TnZAgkUEkt9J/D+Wdh7/FlV2QIEaVAvsUfw/w3cKGkdi
dkAABfxH8lX8P4D7bL3daHZAgO+jhPhZ/D+06Rlgc292QADaS8H+Xfw/b1ms
9gd2dkAEHoasLWD8PxBYf2yZeXZAW5NGlQ==
           "]], 
          
          LineBox[{{1.775394323351955, 0.39977504219037846`}, {
           1.7758955630066278`, 0.609131911747334}, {1.7768780735134437`, 
           1.0192785693105655`}, {1.7778605840202595`, 1.4291164726980679`}, {
           1.778776992836486, 1.811093748872176}, {1.7796934016527128`, 
           2.1927851069238504`}, {1.7815262192851664`, 2.9552771938971425`}, {
           1.7851918545500731`, 4.476473199142751}, {1.792523125079887, 
           7.501979119178477}, {1.8071856661395147`, 13.472853930509064`}, {
           1.83651074825877, 25.016369521736447`}, {1.9001140777689638`, 
           47.953468936250964`}, {1.9594868990814533`, 67.2008170633644}, {
           2.017690436686034, 85.16811333469546}, {2.032343456543403, 
           89.70260368285535}}], 
          
          LineBox[{{2.034256721849525, 90.29759566609344}, {
           2.1397733342408576`, 125.54380630558815`}, {2.2036526941911005`, 
           150.37977638110937`}, {2.263301545943639, 175.32912134137598`}, {
           2.273481058045833, 179.59995698684463`}}], 
          
          LineBox[{{2.275394323351955, 180.39977504219036`}, {
           2.3852138473045827`, 222.83199853383016`}, {2.444416072423192, 
           242.45423682273446`}, {2.5085714628134843`, 262.3600759592076}, {
           2.532343456543403, 269.70260368285534`}}], 
          LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAVBhgYyhGBEDYVKzzwuRwQIS3VaHh
CgVA5ek0xszhckBcItxeW40FQAuppTBuZ3RArnDNnUKPBUD2vo+BcG10QAG/
vtwpkQVAGG4g3nRzdECmW6Fa+JQFQLrL3qGDf3RA8JRmVpWcBUBxD4iiuJd0
QIQH8U3PqwVAa8sRmXrIdECs7AU9Q8oFQM2o4uwoK3VA/jr3eyrMBUCLRN21
XjF1QFGJ6LoRzgVACE/WkJU3dUD2Jcs44NEFQI+FI1cGRHVAQF+QNH3ZBUA3
484Z81x1QNTRGiy36AVAsw6u5/COdUD7ti8bKwcGQHVFgLs283VALpz2xQgJ
BkCkqa35W/l1QGCBvXDmCgZAHHhaCIH/dUDES0vGoQ4GQDoKFXDKC3ZAjOBm
cRgWBkCk1kpYWSR2QL7FLRz2FwZAWYSdCXwqdkDwqvTG0xkGQDTyxD2eMHZA
VHWCHI8dBkDyf0gI4Tx2QBwKnscFJQZAlkdWHF9VdkBO72Ry4yYGQDmRSdp8
W3ZAgNQrHcEoBkD775jPmWF2QLK58seeKgZAwF4N87VndkDknrlyfCwGQF5e
fjvRbXZAFoSAHVouBkB/jtKf63N2QAIPQ9YWMAZADVh/bJl5dkCLecrZ
           "]], 
          LineBox[CompressedData["
1:eJwVxXks1mEAB/AXeZ45QmPC8hY5whyJ5JpvjtfI0ft7K9YQL1Exrb1UzqGY
SBgy91GKmKXFQl5nvIpmlC5kyMjkSMzspfrjs48W/zpzWZLFYhn88//RMP6q
hAXB/pdihZ8FXxym1EpFI5YEiRpOgmOFCw5Ku3xBoxWBnL1Suzhw3SFKtCq6
aktQ5TKgFp++62DnLx817UiQ4vGkuyREDpGOY2yhM4HEn53H7HAFVOoXD5Zw
CLrnLXviXilh37r+YR93goh+uwLPDmUMpTm9HeYS9EYaa5f3qMPveeyR9kCC
PMnYWf1JbcRLLQ4VJBJkZrgoataZYNfJRq40ieDbaQkmW2CK5LuZbtUpBBbj
Zpmf2WZIkzbpb0wjiPZe0kxaMEM2FXQOPCAokvWenYgxR7WcuGm7nGC9a7kn
Pd8Sg8oHCv07CbxUFJuVam2hqmMdpMuiaO8t90qtcsKtyAsbsjEU0q5uJD3f
E4dOhoj04ih0pCIwJfREl/hGqWMCRZCALaO36AnZrCzn2GSKU0UPtTPtvVBe
35e/eI9CRVojvemHF/oXzC1FxRQBLcZ6I+pnoRKseDP1NcU5g9SKd8FctBpq
ulcJKXTvmFVxbnMRsG7I7uiiCP++JiG8z0VtMqd/o49irJTxqW7mwrYyQTVk
mMIltCzXmTLgTy61OE5RdLtb+ck8Y0BrtjMCpikY/idnXyGDhgh6KXaGolVF
61rNKIPNHW36Yp7CSGZ4xmaHQYbGRR+tFQqFE3sfz3vwYDoTZmS/RjEx67pc
FMjDh7roPd/fFFxr4fHJKB7Y1rlPc7Yoeioq24LKeOhlVcQ1bFNsxnNsHzXx
cEXU4C3aoVhRzwqae8ODfE7b0TkxRX1t3hndrzw0+Yi29vYo3o/HHAz9xcNf
niAYgQ==
           "]]}, Annotation[#, "Charting`Private`Tag$5556#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1: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
jYooMa4JLSi2b15cXyfD3Y6Ci/NpWvA/kDTgUw==
           "]]}, 
         Annotation[#, 
          "Charting`Private`Tag$5556#3"]& ], {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 1], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ/cM7b25AfoFduxnblemlAQ75C8pO+qvNs4fxD/b0
7PZVWwfns7IVsb/M2g/ne9Yntm4NOw7nb69Mvbv04jk4/2ZUtn5R+WU4X9C9
N+2gw3U4X+BK6ibz6NtwvrJCzsrWpPtwvsXd3NOOkx4i3POrwefK7Mdwfsb+
Eyf2NT2F82cmL5cSTXgO5+tGPPz2L/UlnH/vs/85B8/XcP6n+5IGYqFv4fwJ
q6vSw8Pfw/lq/By+FbM/wPnbChpW983/COdfUZ3MHjjpE5yv0nxZI3bmZzjf
MuC+yfzZX+D8uwWtdr09X+H8TZaRvEcnfoPzxcKO31zR+h3Ot3/EMPFQyQ+E
/8QyeNUqfsL5TfMy202zfsH5c8/NONZX8BvOr82b/EG26A+c/zpRQyIy6S+c
3/33Fcu9tH9w/q437u/5ov7D+ddULR5ZqTA4wMNbM1l/8lIE/2BYdLWjHCOc
bxzxaqXIQgQ/p9ntuq00E5zfkcbxi3Eygr9XNvH/KxFmOH/nvzZmrT4E/9xm
51e9gixw/lGFtGM9kxD8lu2hCx9yscL5MUp34qJ7Efzf2/SltdnZ4Pwa5pdn
ptYh+GIqlomqDOxwfnle2BeuSgRfJJm/rHUPgr8x/MT3//8RfAAKqWdE
           "]]}, 
         Annotation[#, "Charting`Private`Tag$16595#1"]& ]}}, {}}}, {
    Frame -> True, ImageSize -> 450, LabelStyle -> Directive[
       GrayLevel[0], Bold, FontSize -> 13], FrameLabel -> {
       FormBox["\"t / T\"", TraditionalForm], 
       FormBox["\"Angle\"", TraditionalForm]}, PlotLabel -> 
     FormBox["\"Suzuku (L=600km, \\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
\\(isat\\)]\\)=31.4, \[Psi]=79.7),Winter solstice\"", TraditionalForm], 
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3}, {-31.379967456669032`, 359.5999569868445}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Latitude\"", "\"Longitude\"", "\"\[Alpha]\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\[Alpha]c\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.877570143659423*^9, 3.87763901131645*^9, 
  3.8776880307338*^9, 3.877688164602844*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"bb2bb5df-8769-41e7-b467-053a12c00f6c"]
}, Open  ]],

Cell[TextData[StyleBox["The satellite is in earth\[CloseCurlyQuote]s dark \
side (shadow)  when \[Alpha]<\[Alpha]c",
 FontSize->18]], "Text",
 CellChangeTimes->{{3.919039405256971*^9, 
  3.919039460312791*^9}},ExpressionUUID->"f980b29f-7f19-4b05-9cb9-\
80bef6069ca2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShadowT", "[", "t_", "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Alpha]t", "[", 
          RowBox[{"\[Theta]isat", ",", "t", ",", "\[Psi]v"}], "]"}], "/.", 
         "subPara"}], ")"}], "-", 
       RowBox[{"\[Alpha]c", "[", "L", "]"}]}], "]"}], "\[LessEqual]", "0"}], 
    ",", "1", ",", "0"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.877052716034298*^9, 3.877052831457492*^9}, 
   3.8770530283515368`*^9, {3.8770537232098207`*^9, 3.87705374269035*^9}, {
   3.877053896785241*^9, 3.87705389769526*^9}, {3.87757261948602*^9, 
   3.877572633461144*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"7762d20f-9dcb-4e83-8756-2e34f3036051"],

Cell["\<\
Calculate the fraction of a year when the satellite is in shadow\
\>", "Text",
 CellChangeTimes->{{3.919039493364167*^9, 
  3.919039525656437*^9}},ExpressionUUID->"4eaf5e48-46b7-41d8-91ba-\
96164320ae81"]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{Automatic, 536}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 394, 8, 52, "Input",ExpressionUUID->"f4f95567-9538-4b42-a682-e4f9dc5592cd"],
Cell[955, 30, 128, 3, 30, "Input",ExpressionUUID->"4dfbf177-074b-420e-b980-017cab7c27f3"],
Cell[CellGroupData[{
Cell[1108, 37, 203, 3, 67, "Section",ExpressionUUID->"47b85247-42be-41de-96d6-f139ef69a4a7"],
Cell[1314, 42, 9793, 165, 180, "Input",ExpressionUUID->"34694515-db44-4dfb-923c-ac46d3133693"],
Cell[11110, 209, 1975, 38, 127, "Text",ExpressionUUID->"76c34f99-1a42-4958-8553-a96fc75b6888"],
Cell[CellGroupData[{
Cell[13110, 251, 1587, 45, 119, "Input",ExpressionUUID->"aea07b6f-678a-4d96-8541-85e70d5d7718"],
Cell[14700, 298, 1532, 44, 56, "Output",ExpressionUUID->"020e58dd-8266-48d4-8bb7-98c1b9e2139f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16269, 347, 1565, 44, 119, "Input",ExpressionUUID->"eff0c6bb-38a3-4f36-abef-e38659f9239f"],
Cell[17837, 393, 1380, 38, 56, "Output",ExpressionUUID->"e8c1efe5-d088-4460-890a-c2d2e01a46a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19254, 436, 709, 19, 52, "Input",ExpressionUUID->"3a587313-2f56-4542-a06d-a02cfe66eba7"],
Cell[19966, 457, 788, 18, 34, "Output",ExpressionUUID->"c5f36869-4bad-4839-9bbb-d568c0b0c015"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20791, 480, 1086, 29, 73, "Input",ExpressionUUID->"7a63fe37-3aba-432f-8531-16b63c4dbce4"],
Cell[21880, 511, 1645, 43, 56, "Output",ExpressionUUID->"cf7fd83c-464f-4061-9d29-fba72bddad59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23562, 559, 945, 24, 73, "Input",ExpressionUUID->"c529ed47-5b27-43be-9022-88666ee25488"],
Cell[24510, 585, 4999, 140, 182, "Output",ExpressionUUID->"22eff525-f839-4a0e-91c4-d8773dc1deae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29546, 730, 1039, 24, 94, "Input",ExpressionUUID->"70bdf333-c0ba-4013-a358-4c532ef1425d"],
Cell[30588, 756, 2139, 53, 77, "Output",ExpressionUUID->"7f5ccdce-a4a2-4329-8573-6877ae348012"]
}, Open  ]],
Cell[32742, 812, 213, 5, 35, "Text",ExpressionUUID->"f77f7d26-2fff-4a35-a97c-9f7987f75feb"],
Cell[32958, 819, 7320, 183, 388, "Input",ExpressionUUID->"eb4b4dbd-9c5c-4c26-94cd-fb02240f9478"]
}, Closed]],
Cell[CellGroupData[{
Cell[40315, 1007, 171, 3, 53, "Section",ExpressionUUID->"ddcb13ca-91b8-4197-bf0b-4df56d8ed9ac"],
Cell[40489, 1012, 2694, 63, 157, "Input",ExpressionUUID->"9d2ea980-1a23-4245-86bf-cc87629d8b91"],
Cell[43186, 1077, 492, 12, 52, "Input",ExpressionUUID->"48d30d19-c559-4e90-b13c-cf3981c90ade"],
Cell[43681, 1091, 4073, 92, 304, "Input",ExpressionUUID->"43ca03e3-2c80-4558-ac7c-dc04a66aa8ef"],
Cell[47757, 1185, 718, 17, 52, "Input",ExpressionUUID->"d4374da8-c166-4a35-99aa-ceef31d9803e"],
Cell[48478, 1204, 1148, 30, 94, "Input",ExpressionUUID->"c4e81e8f-db93-4265-a4f4-5e9372a2c175"],
Cell[49629, 1236, 290, 5, 58, "Text",ExpressionUUID->"ce888c9f-f191-4c90-81d3-7b981ecb93ac"],
Cell[49922, 1243, 1158, 23, 52, "Input",ExpressionUUID->"836d5431-e94e-4e53-a4e5-319130de8010"],
Cell[51083, 1268, 937, 19, 52, "Input",ExpressionUUID->"440a2815-39bf-4fb8-9eb1-d8e7557f0eef"]
}, Closed]],
Cell[CellGroupData[{
Cell[52057, 1292, 164, 3, 53, "Section",ExpressionUUID->"3a666312-3f8e-450a-966f-ef9b392f483a"],
Cell[52224, 1297, 120192, 1980, 253, "Output",ExpressionUUID->"f6cd3ab6-35f2-4d95-a9a2-e67b654fbc20"],
Cell[172419, 3279, 3559, 101, 179, "Text",ExpressionUUID->"37bbd3ed-2721-432c-83ab-93746a728842"],
Cell[175981, 3382, 1695, 47, 136, "Input",ExpressionUUID->"79f7d1f1-76df-424d-a13e-bb4c11c0cbd3"],
Cell[177679, 3431, 1772, 46, 136, "Input",ExpressionUUID->"9d274728-81e0-452c-8137-fe32a7dce534"],
Cell[179454, 3479, 439, 10, 30, "Input",ExpressionUUID->"623708f4-5cb6-4b11-bf4e-ccf09d9747f1"],
Cell[179896, 3491, 286, 7, 35, "Text",ExpressionUUID->"4aab804c-6730-41a1-8fba-9a8b491b4767"],
Cell[180185, 3500, 978, 20, 30, "Input",ExpressionUUID->"7e88ebf6-6c5d-4453-bb48-f7a735d2ee1b"],
Cell[181166, 3522, 522, 13, 30, "Input",ExpressionUUID->"1d7c8bb4-df15-4c73-b4c3-9d398e5c93cc"]
}, Closed]],
Cell[CellGroupData[{
Cell[181725, 3540, 247, 4, 53, "Section",ExpressionUUID->"78682cb5-2965-4792-af29-c1d38db8bbc6"],
Cell[CellGroupData[{
Cell[181997, 3548, 3738, 83, 199, "Input",ExpressionUUID->"078a93f9-fbfa-4f6c-b15b-0d0e383a9000"],
Cell[185738, 3633, 59179, 1077, 327, "Output",ExpressionUUID->"bb2bb5df-8769-41e7-b467-053a12c00f6c"]
}, Open  ]],
Cell[244932, 4713, 267, 5, 38, "Text",ExpressionUUID->"f980b29f-7f19-4b05-9cb9-80bef6069ca2"],
Cell[245202, 4720, 802, 19, 30, "Input",ExpressionUUID->"7762d20f-9dcb-4e83-8756-2e34f3036051"],
Cell[246007, 4741, 214, 5, 35, "Text",ExpressionUUID->"4eaf5e48-46b7-41d8-91ba-96164320ae81"]
}, Open  ]]
}
]
*)

